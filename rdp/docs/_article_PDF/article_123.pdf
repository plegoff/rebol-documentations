%PDF-1.3
3 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [73.70 52.19 199.97 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 4 0 R>>
endobj
4 0 obj
<</Length 1595>>
stream
2 J
0.57 w
0.85 w
56.69 805.04 m 538.59 805.04 l S
BT /F1 10.00 Tf ET
q 0.502 g BT 73.70 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
0.57 w
BT /F2 26.00 Tf ET
q 0.502 g BT 118.24 656.92 Td (The REBOL Documentation) Tj ET Q
q 0.502 g BT 243.04 631.41 Td (Project) Tj ET Q
BT /F1 8.00 Tf ET
q 0.502 g BT 220.96 616.97 Td (-- FR - Documentation REBOL - Manuels --) Tj ET Q
0.85 w
BT /F2 20.00 Tf ET
q 0.502 g BT 73.70 423.45 Td (Manuels) Tj ET Q
BT /F3 22.00 Tf ET
297.64 436.54 m 297.64 413.86 l S q 0.000 g BT 300.47 418.60 Td (Manuel de l'utilisateur) Tj ET Q
297.64 413.86 m 297.64 391.18 l S q 0.000 g BT 300.47 395.92 Td (- Chapitre 9 - Les) Tj ET Q
297.64 391.18 m 297.64 368.50 l S q 0.000 g BT 300.47 373.24 Td (Fonctions ) Tj ET Q
297.64 368.50 m 297.64 345.83 l S 
BT /F4 16.00 Tf ET
297.64 345.83 m 297.64 328.82 l S q 0.000 g BT 409.15 332.52 Td (Philippe Le Goff ) Tj ET Q
BT /F4 12.00 Tf ET
297.64 328.82 m 297.64 311.81 l S q 0.000 g BT 308.59 316.72 Td (Première publication : 4 mai 2005, et mis en) Tj ET Q
297.64 311.81 m 297.64 294.80 l S q 0.000 g BT 380.27 299.71 Td (ligne le  mercredi 4 mai 2005) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 73.70 253.54 Td (Résumé :) Tj ET 73.70 252.54 45.01 -0.50 re f Q
BT /F4 8.00 Tf ET
q 0.000 g BT 73.70 239.96 Td (Ce document est la traduction française du Chapitre 9 du User Guide de REBOL/Core, qui concerne les Fonctions) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 73.70 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 503.51 45.79 Td (Page 1/25) Tj ET Q

endstream
endobj
5 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 6 0 R>>
endobj
6 0 obj
<</Length 5985>>
stream
2 J
0.85 w
BT /F4 8.00 Tf ET
0.85 w
56.69 805.04 m 538.59 805.04 l S
BT /F1 10.00 Tf ET
q 0.502 g BT 73.70 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
BT /F4 8.00 Tf ET
BT /F5 10.00 Tf ET
q 0.000 g BT 73.70 780.78 Td ( Ce document est la traduction française du Chapitre 9 du User Guide de REBOL/Core, qui) Tj ET Q
q 0.000 g BT 73.70 766.61 Td (concerne les Fonctions.) Tj ET Q
q 0.000 g BT 73.70 752.43 Td ( ) Tj ET Q
q 0.000 g BT 73.70 738.26 Td (Traducteur : Philippe Le Goff) Tj ET Q
BT /F1 10.00 Tf ET
BT /F5 14.00 Tf ET
q 0.000 g BT 73.70 646.35 Td (Historique de la traduction) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 633.38 Td ( ) Tj ET Q
q 0.000 g BT 76.48 633.38 Td ( ) Tj ET Q
q 0.000 g BT 79.26 633.38 Td ( 					) Tj ET Q
q 0.000 g BT 95.94 633.38 Td ( ) Tj ET Q
q 0.000 g BT 98.72 633.38 Td ( ) Tj ET Q
q 0.000 g BT 101.50 633.38 Td ( ) Tj ET Q
q 0.000 g BT 104.28 633.38 Td ( ) Tj ET Q
BT /F1 9.00 Tf ET
BT /F5 9.00 Tf ET
BT /F1 9.00 Tf ET
BT /F5 9.00 Tf ET
BT /F1 9.00 Tf ET
BT /F5 9.00 Tf ET
BT /F1 9.00 Tf ET
BT /F5 9.00 Tf ET
BT /F1 9.00 Tf ET
BT /F5 9.00 Tf ET
BT /F1 9.00 Tf ET
BT /F1 8.00 Tf ET
BT /F5 8.00 Tf ET
BT /F1 8.00 Tf ET
BT /F5 8.00 Tf ET
BT /F1 8.00 Tf ET
BT /F5 8.00 Tf ET
BT /F1 8.00 Tf ET
BT /F5 8.00 Tf ET
BT /F1 8.00 Tf ET
BT /F5 8.00 Tf ET
BT /F1 8.00 Tf ET
BT /F5 8.00 Tf ET
1.000 1.000 0.000 rg
91.63 643.46 80.99 -14.17 re B q 0.000 g BT 94.46 633.98 Td ( Date ) Tj ET Q
BT /F1 8.00 Tf ET
1.000 g
BT /F5 8.00 Tf ET
1.000 1.000 0.000 rg
172.62 643.46 40.07 -14.17 re B q 0.000 g BT 175.46 633.98 Td (Version ) Tj ET Q
BT /F1 8.00 Tf ET
1.000 g
BT /F5 8.00 Tf ET
1.000 1.000 0.000 rg
212.69 643.46 73.42 -14.17 re B q 0.000 g BT 215.53 633.98 Td (Commentaires ) Tj ET Q
BT /F1 8.00 Tf ET
1.000 g
BT /F5 8.00 Tf ET
1.000 1.000 0.000 rg
286.11 643.46 67.65 -14.17 re B q 0.000 g BT 288.94 633.98 Td (Auteur ) Tj ET Q
BT /F1 8.00 Tf ET
1.000 g
BT /F5 8.00 Tf ET
1.000 1.000 0.000 rg
353.76 643.46 149.90 -14.17 re B q 0.000 g BT 356.59 633.98 Td (Email ) Tj ET Q
BT /F1 8.00 Tf ET
1.000 g
0.902 0.902 0.902 rg
91.63 629.29 80.99 -14.17 re B q 0.000 g BT 94.46 619.80 Td ( 14 avril 2005 21:02 ) Tj ET Q
172.62 629.29 40.07 -14.17 re B q 0.000 g BT 175.46 619.80 Td (1.0.0 ) Tj ET Q
212.69 629.29 73.42 -14.17 re B q 0.000 g BT 215.53 619.80 Td (Traduction initiale ) Tj ET Q
286.11 629.29 67.65 -14.17 re B q 0.000 g BT 288.94 619.80 Td (Philippe Le Goff ) Tj ET Q
353.76 629.29 149.90 -14.17 re B q 0.000 g BT 356.59 619.80 Td (lp&mdash;legoff&mdash;free&mdash;fr ) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 605.03 Td ( ) Tj ET Q
BT /F5 14.00 Tf ET
q 0.000 g BT 70.87 561.31 Td (Vue d'ensemble) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 548.34 Td (  ) Tj ET Q
q 0.000 g BT 70.87 534.17 Td (Plusieurs sortes de fonctions existent dans le langage REBOL :) Tj ET Q
q 0.000 g BT 79.04 505.82 Td (•) Tj ET Q
q 0.000 g BT 90.71 505.82 Td ("Native" : une fonction qui est évaluée directement par le processeur. C'est le plus bas niveau ) Tj ET Q
q 0.000 g BT 90.71 491.65 Td (pour les fonctions du langage.) Tj ET Q
q 0.000 g BT 79.04 477.47 Td (•) Tj ET Q
q 0.000 g BT 90.71 477.47 Td ("Function" : une fonction de plus haut niveau définie par un bloc et évaluée en évaluant les) Tj ET Q
q 0.000 g BT 90.71 463.30 Td (fonctions au sein du bloc. Encore appelée "fonction utilisateur" \() Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 372.95 463.30 Td (user-defined function) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 466.33 463.30 Td (\).) Tj ET Q
q 0.000 g BT 79.04 449.13 Td (•) Tj ET Q
q 0.000 g BT 90.71 449.13 Td ("Mezzanine" : un nom pour des fonctions de haut niveau qui font partie intégrante du langage. ) Tj ET Q
q 0.000 g BT 90.71 434.95 Td (Ce ne sont cependant pas des fonctions natives .) Tj ET Q
q 0.000 g BT 79.04 420.78 Td (•) Tj ET Q
q 0.000 g BT 90.71 420.78 Td ("Operator" : utilisé comme un opérateur. Quelques exemples : +, -, * et /.) Tj ET Q
q 0.000 g BT 79.04 406.61 Td (•) Tj ET Q
q 0.000 g BT 90.71 406.61 Td ("Routine" : utilisée pour appeler des fonctions d'une librairie externe \( pour REBOL/Command \).) Tj ET Q
BT /F5 14.00 Tf ET
q 0.000 g BT 70.87 348.71 Td (Evaluation des fonctions) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 335.74 Td (  ) Tj ET Q
q 0.000 g BT 70.87 321.57 Td (Le chapitre consacré aux Expressions présente le détail de ce qu'est l'évaluation.  La façon dont les) Tj ET Q
q 0.000 g BT 70.87 307.39 Td (arguments de fonctions sont évalués dicte l'ordre général des mots et des valeurs dans le langage.) Tj ET Q
q 0.000 g BT 70.87 293.22 Td ( ) Tj ET Q
q 0.000 g BT 70.87 279.05 Td (La section suivante présente plus en détail comment est réalisée cette évaluation des fonctions.) Tj ET Q
q 0.000 g BT 70.87 264.87 Td ( ) Tj ET Q
q 0.000 g BT 70.87 250.70 Td (Arguments) Tj ET Q
q 0.000 g BT 70.87 236.53 Td ( ) Tj ET Q
q 0.000 g BT 70.87 222.35 Td (Les fonctions recoivent des arguments et renvoient des résultats.) Tj ET Q
q 0.000 g BT 70.87 208.18 Td ( ) Tj ET Q
q 0.000 g BT 70.87 194.01 Td (Quoique certaines fonctions, comme ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 235.94 194.01 Td (now) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 255.94 194.01 Td ( \(date et heure courante\), n'en nécessite pas,  la plupart des) Tj ET Q
q 0.000 g BT 70.87 179.83 Td (fonctions nécessite un ou plusieurs arguments.) Tj ET Q
q 0.000 g BT 70.87 165.66 Td ( ) Tj ET Q
q 0.000 g BT 70.87 151.49 Td (Les arguments fournis à une fonction sont traités par l'interpréteur et ensuite passés à la fonction.) Tj ET Q
q 0.000 g BT 70.87 137.32 Td ( ) Tj ET Q
q 0.000 g BT 70.87 123.14 Td (Les arguments sont traités de la même manière, quelque soit le type de la fonction appelée : native,) Tj ET Q
q 0.000 g BT 70.87 108.97 Td (opérateur, utilisateur, ou autre.) Tj ET Q
q 0.000 g BT 70.87 94.80 Td ( ) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 503.51 45.79 Td (Page 2/25) Tj ET Q

endstream
endobj
7 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 8 0 R>>
endobj
8 0 obj
<</Length 6292>>
stream
2 J
0.85 w
BT /F1 10.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
q 0.000 g BT 70.87 794.95 Td (Par exemple, la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 180.92 794.95 Td (send) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 204.26 794.95 Td ( attend deux arguments :) Tj ET Q
q 0.000 g BT 70.87 780.78 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 767.21 Td ( friend: luke@rebol.com) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 753.03 Td ( message: "message in a bottle") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 738.86 Td ( send friend message) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 724.09 Td ( ) Tj ET Q
q 0.000 g BT 70.87 709.91 Td (Le mot "friend" est d'abord évalué et sa valeur \(luke@rebol.com\) est fournie à la fonction  ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 468.54 709.91 Td (send) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 695.74 Td (comme premier argument.  Ensuite le mot "message" est évalué, et sa valeur devient le second) Tj ET Q
q 0.000 g BT 70.87 681.57 Td (argument.) Tj ET Q
q 0.000 g BT 70.87 667.39 Td ( ) Tj ET Q
q 0.000 g BT 70.87 653.22 Td (Pensez à ces valeurs "friend" et "message" comme étant substituées dans la ligne avant ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 465.25 653.22 Td (send) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 488.59 653.22 Td (, pour) Tj ET Q
q 0.000 g BT 70.87 639.05 Td (donner :) Tj ET Q
q 0.000 g BT 70.87 624.87 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 611.30 Td ( send luke@rebol.com "message in a bottle") Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 596.53 Td ( ) Tj ET Q
q 0.000 g BT 70.87 582.35 Td (Si vous passez trop peu d'arguments à une fonction, un message d'erreur est renvoyé.) Tj ET Q
q 0.000 g BT 70.87 568.18 Td ( ) Tj ET Q
q 0.000 g BT 70.87 554.01 Td (Par exemple, la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 180.92 554.01 Td (send) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 204.26 554.01 Td ( attend deux arguments et si vous n'en fournissez qu'un,  une erreur est) Tj ET Q
q 0.000 g BT 70.87 539.83 Td (générée :) Tj ET Q
q 0.000 g BT 70.87 525.66 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 512.09 Td ( send friend) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 497.92 Td ( ** Script Error: send is missing its message argument.) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 483.74 Td ( ** Where: send friend) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 468.97 Td ( ) Tj ET Q
q 0.000 g BT 70.87 454.80 Td (A contrario, si ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 134.78 454.80 Td (trop) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 152.01 454.80 Td ( d'arguments sont fournis, les valeurs en surplus sont ignorées :) Tj ET Q
q 0.000 g BT 70.87 440.62 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 427.05 Td ( send friend message "urgent") Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 412.28 Td ( ) Tj ET Q
q 0.000 g BT 70.87 398.10 Td (Dans l'exemple précédent, ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 191.72 398.10 Td (send) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 215.06 398.10 Td ( a deux arguments, de telle sorte que la chaîne "urgent"  qui vient) Tj ET Q
q 0.000 g BT 70.87 383.93 Td (comme troisième argument, est ignorée.) Tj ET Q
q 0.000 g BT 70.87 369.76 Td ( ) Tj ET Q
q 0.000 g BT 70.87 355.58 Td (Notez qu'aucune erreur ne se produit. Dans ce cas, il n'y a aucune fonction attendant le troisième) Tj ET Q
q 0.000 g BT 70.87 341.41 Td (argument. D'autre part, dans certains cas, le troisième argument pourrait provenir d'une autre fonction) Tj ET Q
q 0.000 g BT 70.87 327.24 Td (qui  a été évaluée avant ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 179.83 327.24 Td (send) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 203.17 327.24 Td (.) Tj ET Q
q 0.000 g BT 70.87 313.06 Td ( ) Tj ET Q
q 0.000 g BT 70.87 298.89 Td (Les arguments d'une fonction sont évalués de la gauche vers la droite.  Cet ordre est respecté, sauf) Tj ET Q
q 0.000 g BT 70.87 284.72 Td (lorsque les arguments eux-mêmes sont des fonctions.) Tj ET Q
q 0.000 g BT 70.87 270.54 Td ( ) Tj ET Q
q 0.000 g BT 70.87 256.37 Td (Par exemple, si vous écrivez :) Tj ET Q
q 0.000 g BT 70.87 242.20 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 228.62 Td ( send friend detab copy message) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 213.85 Td ( ) Tj ET Q
q 0.000 g BT 70.87 199.68 Td (le second argument doit être calculé par l'évaluation successive des fonctions ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 417.38 199.68 Td (detab) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 444.05 199.68 Td ( et ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 457.95 199.68 Td (copy) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 481.29 199.68 Td (.) Tj ET Q
q 0.000 g BT 70.87 185.50 Td ( ) Tj ET Q
q 0.000 g BT 70.87 171.33 Td (Le résultat de ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 134.24 171.33 Td (copy) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 157.58 171.33 Td ( doit être passé à ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 237.07 171.33 Td (detab) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 263.74 171.33 Td (, et le résultat de ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 340.45 171.33 Td (detab) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 367.12 171.33 Td ( devra être passé à ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 455.50 171.33 Td (send) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 478.84 171.33 Td (.) Tj ET Q
q 0.000 g BT 70.87 157.16 Td ( ) Tj ET Q
q 0.000 g BT 70.87 142.98 Td (Dans l'exemple précédent, la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 240.08 142.98 Td (copy) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 263.42 142.98 Td ( prend un seul argument, le message,  et retourne la copie) Tj ET Q
q 0.000 g BT 70.87 128.81 Td (de message.  Le message copié est passé à la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 319.89 128.81 Td (detab) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 346.56 128.81 Td (, qui enléve les tabulations et renvoie le) Tj ET Q
q 0.000 g BT 70.87 114.64 Td (message sans elles.) Tj ET Q
q 0.000 g BT 70.87 100.46 Td ( ) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 503.51 45.79 Td (Page 3/25) Tj ET Q

endstream
endobj
9 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 10 0 R>>
endobj
10 0 obj
<</Length 5153>>
stream
2 J
0.85 w
BT /F1 10.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
q 0.000 g BT 70.87 794.95 Td (Notez comment les résultats des fonctions passent de la droite vers la gauche lorsque  l'expression) Tj ET Q
q 0.000 g BT 70.87 780.78 Td (est évaluée.) Tj ET Q
q 0.000 g BT 70.87 766.61 Td ( ) Tj ET Q
q 0.000 g BT 70.87 752.43 Td (L'évaluation effectuée ici peut être clarifiée en utilisant des parenthèses. Les items entre parenthèses) Tj ET Q
q 0.000 g BT 70.87 738.26 Td (sont évalués d'abord.  \(Cependant, les parenthèses ne sont pas nécessaires et elles ralentiraient) Tj ET Q
q 0.000 g BT 70.87 724.09 Td (légérement l'évaluation\).) Tj ET Q
q 0.000 g BT 70.87 709.91 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 696.34 Td ( send friend \(detab \(copy message\)\)) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 681.57 Td ( ) Tj ET Q
q 0.000 g BT 70.87 667.39 Td (L'effet en cascade des résultats passés aux fonctions est assez pratique.  Voici un exemple qui utilise) Tj ET Q
q 0.000 g BT 70.87 653.22 Td (deux fois ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 113.67 653.22 Td (insert) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 140.90 653.22 Td ( à l'intérieur de la même expression :) Tj ET Q
q 0.000 g BT 70.87 639.05 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 625.47 Td ( file: %image) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 611.30 Td ( insert tail insert file %graphics/ %.jpg) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 597.13 Td ( print file) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 582.95 Td ( graphics/image.jpg) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 568.18 Td ( ) Tj ET Q
q 0.000 g BT 70.87 554.01 Td (Ici, un nom de répertoire et un suffixe ont été ajoutés à un nom de fichier. Des parenthèses peuvent) Tj ET Q
q 0.000 g BT 70.87 539.83 Td (être utilisées pour clarifier l'ordre de l'évaluation.) Tj ET Q
q 0.000 g BT 70.87 525.66 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 512.09 Td ( insert \(tail \(insert file %graphics/\)\) %.jpg) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 483.14 Td ( ) Tj ET Q
BT /F5 10.00 Tf ET
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 454.80 Td ( ) Tj ET Q
q 0.000 g BT 70.87 440.62 Td (Une remarque concernant les parenthèses :  Les parenthèses sont une bonne pratique lorsqu'on) Tj ET Q
q 0.000 g BT 70.87 426.45 Td (débute en REBOL.  Cependant, vous devriez rapidement être capable de vous passer de cette aide,) Tj ET Q
q 0.000 g BT 70.87 412.28 Td (et d'écrire directement  les expressions sans y mettre de parenthèses. Ne pas utiliser de parenthèses) Tj ET Q
q 0.000 g BT 70.87 398.10 Td (permet à  l'interpréteur d'aller plus vite. ) Tj ET Q
q 0.000 g BT 70.87 383.93 Td ( ) Tj ET Q
q 0.000 g BT 70.87 369.76 Td (Types de données d'un argument) Tj ET Q
q 0.000 g BT 70.87 355.58 Td ( ) Tj ET Q
q 0.000 g BT 70.87 341.41 Td (Habituellement, les fonctions utilisent des arguments ayant un type de données spécifiques. Par) Tj ET Q
q 0.000 g BT 70.87 327.24 Td (exemple, le premier argument de la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 268.73 327.24 Td (send) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 292.07 327.24 Td ( peut uniquement être une adresse  email ou un) Tj ET Q
q 0.000 g BT 70.87 313.06 Td (bloc d'adresses email.  N'importe quel autre autre type de données produira une erreur.) Tj ET Q
q 0.000 g BT 70.87 298.89 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 285.32 Td ( send 1234 "numbers") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 271.14 Td ( ** Script Error: send expected address argument of type: email block.) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 256.97 Td ( ** Where: send 1234 "numbers") Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 242.20 Td ( ) Tj ET Q
q 0.000 g BT 70.87 228.02 Td (Dans l'exemple précédent, le message d'erreur explique que l'argument ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 391.18 228.02 Td (address) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 426.75 228.02 Td ( de la fonction  ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 494.57 228.02 Td (send) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 213.85 Td (doit être soit une adresse email, soit un bloc. Un moyen rapide de savoir quels types d'arguments sont) Tj ET Q
q 0.000 g BT 70.87 199.68 Td (acceptés par une fonction est de taper  "help " suivi du nom de la fonction, à l'invite de commande,) Tj ET Q
q 0.000 g BT 70.87 185.50 Td (dans la console :) Tj ET Q
q 0.000 g BT 70.87 171.33 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 157.76 Td ( help send) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 143.58 Td ( USAGE:) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 129.41 Td (     SEND address message /only /header header-obj) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 115.24 Td ( DESCRIPTION:) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 101.06 Td (     Send a message to an address \(or block of addresses\)) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 503.51 45.79 Td (Page 4/25) Tj ET Q

endstream
endobj
11 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 12 0 R>>
endobj
12 0 obj
<</Length 5242>>
stream
2 J
0.85 w
BT /F2 8.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
BT /F1 10.00 Tf ET
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 795.55 Td (     SEND is a function value.) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 781.38 Td ( ARGUMENTS:) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 767.21 Td (     address -- An address or block of addresses \(Type: email block\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 753.03 Td (     message -- Text of message. First line is subject. \(Type: any\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 738.86 Td ( REFINEMENTS:) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 724.69 Td (     /only -- Send only one message to multiple addresses) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 710.51 Td (     /header -- Supply your own custom header) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 696.34 Td (         header-obj -- The header to use \(Type: object\)) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 681.57 Td ( ) Tj ET Q
q 0.000 g BT 70.87 667.39 Td (La section ARGUMENTS indique le type de données attendu pour chaque argument. Notez que le) Tj ET Q
q 0.000 g BT 70.87 653.22 Td (second argument peut être de n'importe quel type \() Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 297.34 653.22 Td (any) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 313.46 653.22 Td (\). Ainsi il est possible d'écrire :) Tj ET Q
q 0.000 g BT 70.87 639.05 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 625.47 Td ( send luke@rebol.com $1000.00) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 610.70 Td ( ) Tj ET Q
q 0.000 g BT 70.87 596.53 Td (Raffinements) Tj ET Q
q 0.000 g BT 70.87 582.35 Td ( ) Tj ET Q
q 0.000 g BT 70.87 568.18 Td (Un raffinement autorise une variante dans l'usage normal de la fonction.) Tj ET Q
q 0.000 g BT 70.87 554.01 Td ( ) Tj ET Q
q 0.000 g BT 70.87 539.83 Td (Les raffinements permettent aussi de fournir des arguments optionnels. Les raffinements peuvent) Tj ET Q
q 0.000 g BT 70.87 525.66 Td (exister aussi bien pour des fonctions natives que des fonctions utilisateurs.) Tj ET Q
q 0.000 g BT 70.87 511.49 Td ( ) Tj ET Q
q 0.000 g BT 70.87 497.32 Td (Les raffinements sont spécifiés en faisant suivre le nom de la fonction par un slash, puis par le nom du) Tj ET Q
q 0.000 g BT 70.87 483.14 Td (raffinement.) Tj ET Q
q 0.000 g BT 70.87 468.97 Td ( ) Tj ET Q
q 0.000 g BT 70.87 454.80 Td (Par exemple :) Tj ET Q
q 0.000 g BT 70.87 440.62 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 427.05 Td ( copy/part  \(copy just part of a string\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 412.88 Td ( find/tail  \(return the tail of the match\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 398.70 Td ( load/markup  \(return XML/HTML tags and strings\)) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 383.93 Td ( ) Tj ET Q
q 0.000 g BT 70.87 369.76 Td (Les fonctions peuvent aussi inclure plusieurs raffinements :) Tj ET Q
q 0.000 g BT 70.87 355.58 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 342.01 Td ( find/case/tail \(match case and return tail\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 327.84 Td ( insert/only/dup \(insert entire block multiple times\)) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 313.06 Td ( ) Tj ET Q
q 0.000 g BT 70.87 298.89 Td (Vous avez déjà vu comment la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 247.62 298.89 Td (copy) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 270.96 298.89 Td ( est utilisée pour  dupliquer une chaîne.  Par défaut, ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 70.87 284.72 Td (copy) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 94.21 284.72 Td ( renvoie une copie de son argument :) Tj ET Q
q 0.000 g BT 70.87 270.54 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 256.97 Td ( string: "no time like the present") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 242.80 Td ( print copy string) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 228.62 Td ( no time like the present) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 213.85 Td ( ) Tj ET Q
q 0.000 g BT 70.87 199.68 Td (En utilisant le raffinement ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 185.92 199.68 Td (/part) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 207.59 199.68 Td (, ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 213.15 199.68 Td (copy) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 236.49 199.68 Td ( renvoie seulement une partie de la chaîne :) Tj ET Q
q 0.000 g BT 70.87 185.50 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 171.93 Td ( print copy/part string 7) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 157.76 Td ( no time) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 142.98 Td ( ) Tj ET Q
q 0.000 g BT 70.87 128.81 Td (Dans l'exemple précédent, le raffinement ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 255.08 128.81 Td (/part) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 276.75 128.81 Td ( spécifie  que seulement sept premiers caractères de la) Tj ET Q
q 0.000 g BT 70.87 114.64 Td (chaîne doivent être copiés.) Tj ET Q
q 0.000 g BT 70.87 100.46 Td ( ) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 503.51 45.79 Td (Page 5/25) Tj ET Q

endstream
endobj
13 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 14 0 R>>
endobj
14 0 obj
<</Length 5302>>
stream
2 J
0.85 w
BT /F1 10.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
q 0.000 g BT 70.87 794.95 Td (Pour savoir quels raffinements existent pour une fonction comme ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 361.55 794.95 Td (copy) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 384.89 794.95 Td (,  utilisez là encore l'aide en) Tj ET Q
q 0.000 g BT 70.87 780.78 Td (ligne :) Tj ET Q
q 0.000 g BT 70.87 766.61 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 753.03 Td ( help copy) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 738.86 Td ( USAGE:) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 724.69 Td (     COPY value /part range /deep) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 710.51 Td ( DESCRIPTION:) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 696.34 Td (      Returns a copy of a value.) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 682.17 Td (      COPY is an action value.) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 667.99 Td ( ARGUMENTS:) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 653.82 Td (      value -- Usually a series \(Type: series port bitset\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 639.65 Td ( REFINEMENTS:) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 625.47 Td (      /part -- Limits to a given length or position.) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 611.30 Td (          range -- \(Type: number series port\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 597.13 Td (      /deep -- Also copies series values within the block.) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 582.35 Td ( ) Tj ET Q
q 0.000 g BT 70.87 568.18 Td (Notez que le raffinement ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 182.59 568.18 Td (/part) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 204.26 568.18 Td ( nécessite un argument supplémentaire.  Les raffinements n'imposent) Tj ET Q
q 0.000 g BT 70.87 554.01 Td (pas tous des arguments supplémentaires.) Tj ET Q
q 0.000 g BT 70.87 539.83 Td ( ) Tj ET Q
q 0.000 g BT 70.87 525.66 Td (Par exemple, le raffinement ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 195.92 525.66 Td (/deep) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 222.04 525.66 Td ( spécifie que ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 280.96 525.66 Td (copy) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 304.30 525.66 Td ( effectuera des copies de tous les  sous-blocs) Tj ET Q
q 0.000 g BT 70.87 511.49 Td (rencontrés. Aucun nouvel argument n'est requis.) Tj ET Q
q 0.000 g BT 70.87 497.32 Td ( ) Tj ET Q
q 0.000 g BT 70.87 483.14 Td (Lorsque plusieurs arguments sont utilisés avec une fonction, l'ordre des arguments est déterminé  par) Tj ET Q
q 0.000 g BT 70.87 468.97 Td (l'ordre dans lequel les raffinements sont indiqués.) Tj ET Q
q 0.000 g BT 70.87 454.80 Td ( ) Tj ET Q
q 0.000 g BT 70.87 440.62 Td (Par exemple :) Tj ET Q
q 0.000 g BT 70.87 426.45 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 412.88 Td ( str: "test") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 398.70 Td ( insert/dup/part str "this one" 4 5) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 384.53 Td ( print str) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 370.36 Td ( this this this this test) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 355.58 Td ( ) Tj ET Q
q 0.000 g BT 70.87 341.41 Td (Inverser l'ordre des raffinements ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 216.72 341.41 Td (/dup) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 237.83 341.41 Td ( et ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 251.73 341.41 Td (/part) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 273.40 341.41 Td ( modifie l'ordre attendu des arguments. Vous pouvez) Tj ET Q
q 0.000 g BT 70.87 327.24 Td (voir la différence :) Tj ET Q
q 0.000 g BT 70.87 313.06 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 299.49 Td ( str: "test") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 285.32 Td ( insert/part/dup str "this one" 4 5) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 271.14 Td ( print str) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 256.97 Td ( thisthisthisthisthistest) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 242.20 Td ( ) Tj ET Q
q 0.000 g BT 70.87 228.02 Td (L'ordre des raffinements indique l'ordre des arguments.) Tj ET Q
q 0.000 g BT 70.87 213.85 Td ( ) Tj ET Q
q 0.000 g BT 70.87 199.68 Td (Valeurs de fonction) Tj ET Q
q 0.000 g BT 70.87 185.50 Td ( ) Tj ET Q
q 0.000 g BT 70.87 171.33 Td (L'exemple précédent décrivait comment les fonctions renvoient des valeurs quant elles sont évaluées.) Tj ET Q
q 0.000 g BT 70.87 157.16 Td ( ) Tj ET Q
q 0.000 g BT 70.87 142.98 Td (Pourtant, parfois, vous voudrez obtenir la fonction elle-même en tant que valeur,  et pas la valeur) Tj ET Q
q 0.000 g BT 70.87 128.81 Td (qu'elle retourne.  Ceci peut être fait en faisant précéder le nom de la fonction du caractère ") Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 474.31 128.81 Td ( :) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 480.42 128.81 Td (" ou en) Tj ET Q
q 0.000 g BT 70.87 114.64 Td (utilisant ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 107.55 114.64 Td (get function) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 164.77 114.64 Td (.) Tj ET Q
q 0.000 g BT 70.87 100.46 Td ( ) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 503.51 45.79 Td (Page 6/25) Tj ET Q

endstream
endobj
15 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 16 0 R>>
endobj
16 0 obj
<</Length 4922>>
stream
2 J
0.85 w
BT /F1 10.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
q 0.000 g BT 70.87 794.95 Td (Par exemple, pour définir un mot, ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 221.49 794.95 Td (pr) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 231.49 794.95 Td (, comme étant la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 345.99 794.95 Td (print) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 368.21 794.95 Td (, vous devriez écrire :) Tj ET Q
q 0.000 g BT 70.87 780.78 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 767.21 Td ( pr: :print) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 752.43 Td ( ) Tj ET Q
q 0.000 g BT 70.87 738.26 Td (Ou encore :) Tj ET Q
q 0.000 g BT 70.87 724.09 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 710.51 Td ( pr: get `print) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 695.74 Td ( ) Tj ET Q
q 0.000 g BT 70.87 681.57 Td (A présent, ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 119.23 681.57 Td (pr) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 129.23 681.57 Td ( est équivalent à la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 253.19 681.57 Td (print) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 275.41 681.57 Td ( :) Tj ET Q
q 0.000 g BT 70.87 667.39 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 653.82 Td ( pr "this is a test") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 639.65 Td ( this is a test) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 624.87 Td (  ) Tj ET Q
BT /F5 14.00 Tf ET
q 0.000 g BT 70.87 581.15 Td (Définir des fonctions) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 568.18 Td (  ) Tj ET Q
q 0.000 g BT 70.87 554.01 Td (Vous pouvez définir vos propres fonctions utilisables comme des fonctions natives.) Tj ET Q
q 0.000 g BT 70.87 539.83 Td ( ) Tj ET Q
q 0.000 g BT 70.87 525.66 Td (Ces fonctions sont appelées "fonctions utilisateur" \(user-defined functions\).  Les fonctions définies par) Tj ET Q
q 0.000 g BT 70.87 511.49 Td (l'utilisateur ont pour type de données \(datatype\) : ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 290.12 511.49 Td (function !) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 497.32 Td ( ) Tj ET Q
q 0.000 g BT 70.87 483.14 Td (does) Tj ET Q
q 0.000 g BT 70.87 468.97 Td ( ) Tj ET Q
q 0.000 g BT 70.87 454.80 Td (Vous pouvez écrire des fonctions simples qui ne nécessitent pas d'arguments, avec la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 492.42 454.80 Td (does) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 515.76 454.80 Td (.) Tj ET Q
q 0.000 g BT 70.87 440.62 Td ( ) Tj ET Q
q 0.000 g BT 70.87 426.45 Td (Cet exemple définit une nouvelle fonction qui affiche l'heure courante :) Tj ET Q
q 0.000 g BT 70.87 412.28 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 398.70 Td ( print-time: does [print now/time]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 384.53 Td ( print-time) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 370.36 Td ( 10:30) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 355.58 Td ( ) Tj ET Q
q 0.000 g BT 70.87 341.41 Td (la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 119.23 341.41 Td (does) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 142.57 341.41 Td ( renvoie une valeur, qui est la nouvelle fonction. Dans l'exemple, le mot "print-time") Tj ET Q
q 0.000 g BT 70.87 327.24 Td (est associé à cette fonction.) Tj ET Q
q 0.000 g BT 70.87 313.06 Td ( ) Tj ET Q
q 0.000 g BT 70.87 298.89 Td (Cette valeur de fonction peut être associée à un mot,  être passée à une autre fonction, retournée) Tj ET Q
q 0.000 g BT 70.87 284.72 Td (comme résultat d'une fonction,  sauvée dans un bloc, ou immédiatement évaluée.) Tj ET Q
q 0.000 g BT 70.87 270.54 Td ( ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 70.87 242.20 Td ( ) Tj ET Q
q 0.000 g BT 70.87 213.85 Td ( ) Tj ET Q
q 0.000 g BT 70.87 199.68 Td (Le paragraphe ci-dessous concernant la fonction ) Tj ET Q
q 0.000 g BT 307.60 199.68 Td (has) Tj ET Q
q 0.000 g BT 324.83 199.68 Td ( ne fait pas  partie de la traduction) Tj ET Q
q 0.000 g BT 70.87 185.50 Td (originale. Il a été rajouté par souci de cohérence. ) Tj ET Q
q 0.000 g BT 305.41 185.50 Td ( ) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 171.33 Td ( ) Tj ET Q
q 0.000 g BT 70.87 157.16 Td (has) Tj ET Q
q 0.000 g BT 70.87 142.98 Td ( ) Tj ET Q
q 0.000 g BT 70.87 128.81 Td (Une autre façon d'écire des fonctions simples sans arguments est d'utiliser  ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 407.05 128.81 Td (has) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 424.28 128.81 Td (. br /> Cette fonction) Tj ET Q
q 0.000 g BT 70.87 114.64 Td (prend par contre des variables locales et est définie ainsi :) Tj ET Q
q 0.000 g BT 70.87 100.46 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 503.51 45.79 Td (Page 7/25) Tj ET Q

endstream
endobj
17 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 18 0 R>>
endobj
18 0 obj
<</Length 5752>>
stream
2 J
0.85 w
BT /F2 8.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
BT /F1 10.00 Tf ET
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 795.55 Td ( has var-locales body) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 780.78 Td ( ) Tj ET Q
q 0.000 g BT 70.87 766.61 Td (Le premier argument \(var-locales\) est un bloc de variable\(s\) locale\(s\),  le second, le corps de la) Tj ET Q
q 0.000 g BT 70.87 752.43 Td (fonction.) Tj ET Q
q 0.000 g BT 70.87 738.26 Td ( ) Tj ET Q
q 0.000 g BT 70.87 724.09 Td (Par exemple :) Tj ET Q
q 0.000 g BT 70.87 709.91 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 696.34 Td ( jolie-ville: has [ville] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 682.17 Td (     ville: ask "Où habitez-vous ? ") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 667.99 Td (     print [ ville  " est une jolie ville "]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 653.82 Td ( ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 639.65 Td ( ) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 625.47 Td ( jolie-ville             ) Tj ET Q
q 1.000 0.000 0.000 rg BT 190.87 625.47 Td ( Où habitez-vous ? Bruxelles) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 611.30 Td ( Bruxelles  est une jolie ville) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 596.53 Td ( ) Tj ET Q
q 0.000 g BT 70.87 582.35 Td (func) Tj ET Q
q 0.000 g BT 70.87 568.18 Td ( ) Tj ET Q
q 0.000 g BT 70.87 554.01 Td (Les fonctions qui nécessitent des arguments sont définies avec la fonction  ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 404.93 554.01 Td (func) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 426.04 554.01 Td ( qui accepte deux) Tj ET Q
q 0.000 g BT 70.87 539.83 Td (arguments :) Tj ET Q
q 0.000 g BT 70.87 525.66 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 512.09 Td ( func spec body) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 497.32 Td ( ) Tj ET Q
q 0.000 g BT 70.87 483.14 Td (Le premier argument est un bloc fournissant les spécifications d'interface de la fonction.) Tj ET Q
q 0.000 g BT 70.87 468.97 Td ( ) Tj ET Q
q 0.000 g BT 70.87 454.80 Td (C'est à dire : une description de la fonction, ses arguments, les types de données permis pour  les) Tj ET Q
q 0.000 g BT 70.87 440.62 Td (arguments, les descriptions des arguments, et d'autres éléments. Le second argument est un bloc de) Tj ET Q
q 0.000 g BT 70.87 426.45 Td (code qui est évalué à chaque appel et évaluation de la fonction.) Tj ET Q
q 0.000 g BT 70.87 412.28 Td ( ) Tj ET Q
q 0.000 g BT 70.87 398.10 Td (Voici un exemple d'une nouvelle fonction appelée ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 292.90 398.10 Td (sum) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 313.46 398.10 Td ( :) Tj ET Q
q 0.000 g BT 70.87 383.93 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 370.36 Td ( sum: func [arg1 arg2] [arg1 + arg2]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 355.58 Td ( ) Tj ET Q
q 0.000 g BT 70.87 341.41 Td (La fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 122.57 341.41 Td (sum) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 143.13 341.41 Td ( accepte deux arguments, comme spécifié dans le premier bloc.) Tj ET Q
q 0.000 g BT 70.87 327.24 Td ( ) Tj ET Q
q 0.000 g BT 70.87 313.06 Td (Le second bloc est le corps de la fonction, lequel, lorsqu'il est évalué, conduit à l'addition  des deux) Tj ET Q
q 0.000 g BT 70.87 298.89 Td (arguments ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 120.89 298.89 Td (arg1) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 140.90 298.89 Td ( et ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 154.80 298.89 Td (arg2) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 174.81 298.89 Td (.  La nouvelle fonction est retournée en tant que valeur à la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 476.10 298.89 Td (func) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 497.21 298.89 Td ( puis ) Tj ET Q
q 0.000 g BT 70.87 284.72 Td (le mot ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 100.88 284.72 Td (sum) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 121.44 284.72 Td ( lui est affecté.) Tj ET Q
q 0.000 g BT 70.87 270.54 Td ( ) Tj ET Q
q 0.000 g BT 70.87 256.37 Td (En pratique :) Tj ET Q
q 0.000 g BT 70.87 242.20 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 228.62 Td ( print sum 123 321) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 214.45 Td ( 444) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 199.68 Td ( ) Tj ET Q
q 0.000 g BT 70.87 185.50 Td (le résultat de l'addition de arg1 et arg2 est renvoyé puis affiché.) Tj ET Q
q 0.000 g BT 70.87 171.33 Td ( ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 70.87 157.16 Td (func) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 91.98 157.16 Td ( est définie dans REBOL. ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 207.04 157.16 Td (func) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 228.15 157.16 Td ( est une fonction qui fabrique d'autres fonctions.  Elle réalise un ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 70.87 142.98 Td (make) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 96.44 142.98 Td ( sur le type de données ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 203.17 142.98 Td (function !) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 248.72 142.98 Td ( \(datatype\). ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 302.08 142.98 Td (func) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 323.19 142.98 Td ( est définie ainsi :) Tj ET Q
q 0.000 g BT 70.87 128.81 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 115.24 Td ( func: make function! [args body] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 101.06 Td (     make function! args body) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 503.51 45.79 Td (Page 8/25) Tj ET Q

endstream
endobj
19 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [90.71 52.19 216.98 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 20 0 R>>
endobj
20 0 obj
<</Length 5301>>
stream
2 J
0.85 w
BT /F2 8.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
BT /F1 10.00 Tf ET
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 795.55 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 780.78 Td ( ) Tj ET Q
q 0.000 g BT 70.87 766.61 Td (Spécifications d'interface) Tj ET Q
q 0.000 g BT 70.87 752.43 Td ( ) Tj ET Q
q 0.000 g BT 70.87 738.26 Td (Le premier bloc d'une définition de fonction est appelé sa ") Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 329.80 738.26 Td (spécification d'interface) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 433.42 738.26 Td (".) Tj ET Q
q 0.000 g BT 70.87 724.09 Td ( ) Tj ET Q
q 0.000 g BT 70.87 709.91 Td (Ce bloc inclut une description de la fonction, ses arguments, les types de données permis pour les) Tj ET Q
q 0.000 g BT 70.87 695.74 Td (arguments,  les descriptions des arguments, et d'autres éléments.  La spécification d'interface est un) Tj ET Q
q 0.000 g BT 70.87 681.57 Td (dialecte de REBOL \(en ceci qu'il y a des régles d'évaluation  différentes de celles pour le code) Tj ET Q
q 0.000 g BT 70.87 667.39 Td (normal\).) Tj ET Q
q 0.000 g BT 70.87 653.22 Td ( ) Tj ET Q
q 0.000 g BT 70.87 639.05 Td (Le bloc de spécification posséde le format :) Tj ET Q
q 0.000 g BT 70.87 624.87 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 611.30 Td ( [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 597.13 Td (     "function description") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 582.95 Td (     [optional-attributes]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 568.78 Td ( argument-1 [optional-type]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 554.61 Td ( "argument description") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 540.43 Td ( argument-2 [optional-type]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 526.26 Td ( "argument description") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 512.09 Td ( ...) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 497.92 Td ( /refinement) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 483.74 Td ( "refinement description") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 469.57 Td ( refinement-argument-1 [optional-type]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 455.40 Td ( "refinement argument description") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 441.22 Td ( ...) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 427.05 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 412.28 Td ( ) Tj ET Q
q 0.000 g BT 70.87 398.10 Td (Les champs du bloc de spécification sont : ) Tj ET Q
q 0.000 g BT 70.87 383.93 Td ( ) Tj ET Q
BT /F5 10.00 Tf ET
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 355.58 Td ( ) Tj ET Q
q 0.000 g BT 70.87 341.41 Td (NDT : ici, certains items n'ont pas été traduits, pour rester en correspondance avec le code ci-dessus. ) Tj ET Q
q 0.000 g BT 79.04 313.06 Td (•) Tj ET Q
q 0.000 g BT 90.71 313.06 Td (Description : un courte description de la fonction.  C'est une chaîne de caractères qui peut être ) Tj ET Q
q 0.000 g BT 90.71 298.89 Td (consultable par d'autres fonctions telle que l'aide en ligne "help", pour expliciter l'usage et l'objet) Tj ET Q
q 0.000 g BT 90.71 284.72 Td (de  la fonction.) Tj ET Q
q 0.000 g BT 79.04 270.54 Td (•) Tj ET Q
q 0.000 g BT 90.71 270.54 Td (Attributs : un bloc qui décrit des propriétés spéciales de la fonction, comme son comportement) Tj ET Q
q 0.000 g BT 90.71 256.37 Td (dans les  cas d'erreur. Il devrait être étendu dans le futur pour inclure des flags pour les) Tj ET Q
q 0.000 g BT 90.71 242.20 Td (optimisations.) Tj ET Q
q 0.000 g BT 79.04 228.02 Td (•) Tj ET Q
q 0.000 g BT 90.71 228.02 Td (Argument : une variable qui est utilisée pour accéder à un argument dans le corps de la fonction.) Tj ET Q
q 0.000 g BT 79.04 213.85 Td (•) Tj ET Q
q 0.000 g BT 90.71 213.85 Td (Arg Type : un bloc identifiant les types de données qui seront acceptés par la fonction. Si un type) Tj ET Q
q 0.000 g BT 90.71 199.68 Td (de données non identifié dans ce bloc est passée à la fonction, une erreur se produira .) Tj ET Q
q 0.000 g BT 79.04 185.50 Td (•) Tj ET Q
q 0.000 g BT 90.71 185.50 Td (Arg Description : une courte description de l'argument. Comme pour la description de la fonction, ) Tj ET Q
q 0.000 g BT 90.71 171.33 Td (elle peut être consultée par d'autres fonctions comme ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 330.51 171.33 Td (help) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 351.07 171.33 Td (.) Tj ET Q
q 0.000 g BT 79.04 157.16 Td (•) Tj ET Q
q 0.000 g BT 90.71 157.16 Td (Refinement : un mot décrivant le raffinement, qui précise qu'un comportement spécial sera) Tj ET Q
q 0.000 g BT 90.71 142.98 Td (effectué par la fonction.) Tj ET Q
q 0.000 g BT 79.04 128.81 Td (•) Tj ET Q
q 0.000 g BT 90.71 128.81 Td (Refinement Description : une courte description du raffinement.) Tj ET Q
q 0.000 g BT 79.04 114.64 Td (•) Tj ET Q
q 0.000 g BT 90.71 114.64 Td (Refinement Argument : une variable utilisée pour le raffinement.) Tj ET Q
q 0.000 g BT 79.04 100.46 Td (•) Tj ET Q
q 0.000 g BT 90.71 100.46 Td (Refinement Argument Type : un bloc identifiant le type de données attendus pour le raffinement.) Tj ET Q
0.85 w
76.54 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 90.71 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 503.51 45.79 Td (Page 9/25) Tj ET Q

endstream
endobj
21 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 22 0 R>>
endobj
22 0 obj
<</Length 4852>>
stream
2 J
0.85 w
BT /F1 10.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
76.54 805.04 m 538.59 805.04 l S
q 0.502 g BT 90.71 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
q 0.000 g BT 79.04 794.95 Td (•) Tj ET Q
q 0.000 g BT 90.71 794.95 Td (Refinement Argument Description : une courte description de l'argument du raffinement) Tj ET Q
q 0.000 g BT 70.87 766.61 Td (Tous ces champs sont optionnels.) Tj ET Q
q 0.000 g BT 70.87 752.43 Td ( ) Tj ET Q
q 0.000 g BT 70.87 738.26 Td (A titre d'exemple, le bloc d'argument de la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 297.02 738.26 Td (sum) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 317.58 738.26 Td ( \(vue précédemment\) est redéfini  pour) Tj ET Q
q 0.000 g BT 70.87 724.09 Td (restreindre le type de données des arguments. Les descriptions de la fonction et des arguments sont) Tj ET Q
q 0.000 g BT 70.87 709.91 Td (également rajoutées :) Tj ET Q
q 0.000 g BT 70.87 695.74 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 682.17 Td ( sum: func [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 667.99 Td (     "Return the sum of two numbers.") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 653.82 Td (     arg1 [number!] "first number") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 639.65 Td (     arg2 [number!] "second number") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 625.47 Td ( ][) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 611.30 Td (     arg1 + arg2) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 597.13 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 582.35 Td ( ) Tj ET Q
q 0.000 g BT 70.87 568.18 Td (A présent, le type de données des arguments est automatiquement contrôlé, ce qui conduit à générer) Tj ET Q
q 0.000 g BT 70.87 554.01 Td (des erreurs comme :) Tj ET Q
q 0.000 g BT 70.87 539.83 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 526.26 Td ( print sum 1 "test") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 512.09 Td ( ** Script Error: sum expected arg2 argument of type: number.) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 497.92 Td ( ** Where: print sum 1 "test") Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 483.14 Td ( ) Tj ET Q
q 0.000 g BT 70.87 468.97 Td (Pour autoriser d'autres types de données, il est possible d'en indiquer plusieurs :) Tj ET Q
q 0.000 g BT 70.87 454.80 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 441.22 Td ( sum: func [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 427.05 Td (     "Return the sum of two numbers.") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 412.88 Td (     arg1 [number! tuple! money!] "first number") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 398.70 Td (     arg2 [number! tuple! money!] "second number") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 384.53 Td ( ][) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 370.36 Td (     arg1 + arg2) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 356.18 Td ( ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 342.01 Td ( print sum 1.2.3 3.2.1) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 327.84 Td ( 4.4.4) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 313.66 Td ( print sum $1234 100) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 299.49 Td ( $1334.00) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 284.72 Td ( ) Tj ET Q
q 0.000 g BT 70.87 270.54 Td (A présent, la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 167.59 270.54 Td (sum) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 188.15 270.54 Td ( acceptera un nombre, un "tuple", une valeur monétaire comme arguments. ) Tj ET Q
q 0.000 g BT 70.87 256.37 Td (Si au sein de la fonction, vous devez distinguer quel est le type de données passées, vous pouvez) Tj ET Q
q 0.000 g BT 70.87 242.20 Td (utiliser  les fonctions habituelles pour les tests de type de données \(datatypes\).) Tj ET Q
q 0.000 g BT 70.87 228.02 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 214.45 Td ( if tuple? arg1 [print arg1]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 200.28 Td ( if money? arg2 [print arg2]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 185.50 Td ( ) Tj ET Q
q 0.000 g BT 70.87 171.33 Td (Comme la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 157.01 171.33 Td (sum) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 177.57 171.33 Td ( est maintenant décrite, la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 332.65 171.33 Td (help) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 353.21 171.33 Td ( peut à présent fournir les ) Tj ET Q
q 0.000 g BT 70.87 157.16 Td (informations pratiques sur elle :) Tj ET Q
q 0.000 g BT 70.87 142.98 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 129.41 Td ( help sum) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 115.24 Td ( USAGE:) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 101.06 Td (     SUM arg1 arg2) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 501.28 45.79 Td (Page 10/25) Tj ET Q

endstream
endobj
23 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 24 0 R>>
endobj
24 0 obj
<</Length 5056>>
stream
2 J
0.85 w
BT /F2 8.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
BT /F1 10.00 Tf ET
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 795.55 Td ( DESCRIPTION:) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 781.38 Td (      Return the sum of two numbers.) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 767.21 Td (      SUM is a function value.) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 753.03 Td ( ARGUMENTS:) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 738.86 Td (      arg1 -- first number \(Type: number tuple money\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 724.69 Td (      arg2 -- second number \(Type: number tuple money\)) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 709.91 Td ( ) Tj ET Q
q 0.000 g BT 70.87 695.74 Td (Arguments littéraux) Tj ET Q
q 0.000 g BT 70.87 681.57 Td ( ) Tj ET Q
q 0.000 g BT 70.87 667.39 Td (Comme décrit auparavant, l'interpréteur évalue les arguments des fonctions et les passe au corps de) Tj ET Q
q 0.000 g BT 70.87 653.22 Td (la fonction. Cependant, il y a des fois où vous ne voudrez pas que les arguments des fonctions soient) Tj ET Q
q 0.000 g BT 70.87 639.05 Td (évalués.) Tj ET Q
q 0.000 g BT 70.87 624.87 Td ( ) Tj ET Q
q 0.000 g BT 70.87 610.70 Td (Par exemple, si vous avez besoin de passer un mot et d'y accéder dans le corps de la fonction, vous) Tj ET Q
q 0.000 g BT 70.87 596.53 Td (ne voulez pas  qu'il soit évaluez comme un argument.) Tj ET Q
q 0.000 g BT 70.87 582.35 Td ( ) Tj ET Q
q 0.000 g BT 70.87 568.18 Td (La fonction d'aide en ligne, ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 192.30 568.18 Td (help) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 212.86 568.18 Td (, qui attend en argument un mot, est un bon exemple pour cela :) Tj ET Q
q 0.000 g BT 70.87 554.01 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 540.43 Td ( help print) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 525.66 Td ( ) Tj ET Q
q 0.000 g BT 70.87 511.49 Td (Pour éviter que ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 141.46 511.49 Td (print) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 163.68 511.49 Td ( soit évalué, la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 268.18 511.49 Td (help) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 288.74 511.49 Td ( doit spécifier que son argument ne  doit pas être) Tj ET Q
q 0.000 g BT 70.87 497.32 Td (évalué.) Tj ET Q
q 0.000 g BT 70.87 483.14 Td ( ) Tj ET Q
q 0.000 g BT 70.87 468.97 Td (Pour indiquer que l'argument ne doit pas être évalué, faites précéder le nom de l'argument avec une ) Tj ET Q
q 0.000 g BT 70.87 454.80 Td (apostrophe \(signifiant un mot littéral\).) Tj ET Q
q 0.000 g BT 70.87 440.62 Td ( ) Tj ET Q
q 0.000 g BT 70.87 426.45 Td (Par exemple :) Tj ET Q
q 0.000 g BT 70.87 412.28 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 398.70 Td ( zap: func [`var] [set var 0]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 384.53 Td ( test: 10) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 370.36 Td ( zap test) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 356.18 Td ( print test) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 342.01 Td ( 10) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 327.24 Td ( ) Tj ET Q
q 0.000 g BT 70.87 313.06 Td (L'argument ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 123.36 313.06 Td (var) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 137.25 313.06 Td ( est précédé d'une apostrophe, ce qui informe l'interpréteur qu'il doit  être pris tel quel ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 70.87 298.89 Td (sans) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 91.99 298.89 Td ( être d'abord évalué.  L'argument est passé comme un ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 335.93 298.89 Td (mot) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 352.60 298.89 Td (.) Tj ET Q
q 0.000 g BT 70.87 284.72 Td ( ) Tj ET Q
q 0.000 g BT 70.87 270.54 Td (Par exemple :) Tj ET Q
q 0.000 g BT 70.87 256.37 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 242.80 Td ( say: func [`var] [probe var]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 228.62 Td ( say test) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 214.45 Td ( test) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 199.68 Td ( ) Tj ET Q
q 0.000 g BT 70.87 185.50 Td (L'exemple affiche le mot qui est passé en tant qu'argument.) Tj ET Q
q 0.000 g BT 70.87 171.33 Td ( ) Tj ET Q
q 0.000 g BT 70.87 157.16 Td (Un autre exemple est une fonction qui incrémente de 1 une variable et renvoie le résultat  \(analogue à) Tj ET Q
q 0.000 g BT 70.87 142.98 Td (la fonction ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 119.23 142.98 Td (incrément) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 163.13 142.98 Td ( ++ en C\) :) Tj ET Q
q 0.000 g BT 70.87 128.81 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 115.24 Td ( ++: func ['word] [set word 1 + get word]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 101.06 Td ( count: 0) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 501.28 45.79 Td (Page 11/25) Tj ET Q

endstream
endobj
25 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 26 0 R>>
endobj
26 0 obj
<</Length 5555>>
stream
2 J
0.85 w
BT /F2 8.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
BT /F1 10.00 Tf ET
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 795.55 Td ( ++ count) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 781.38 Td ( print count) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 767.21 Td ( 1) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 753.03 Td ( print ++ count) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 738.86 Td ( 2) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 724.09 Td ( ) Tj ET Q
q 0.000 g BT 70.87 709.91 Td (Récupérer les arguments) Tj ET Q
q 0.000 g BT 70.87 695.74 Td ( ) Tj ET Q
q 0.000 g BT 70.87 681.57 Td (Les arguments de fonction peuvent aussi spécifier que la valeur d'un mot doit être récupérée mais pas) Tj ET Q
q 0.000 g BT 70.87 667.39 Td (évaluée. C'est assez similaire à la situation des arguments littéraux décrite ci-dessus, mais plutôt que) Tj ET Q
q 0.000 g BT 70.87 653.22 Td (de passer le mot,  c'est la valeur du mot qui est passée sans être évaluée.) Tj ET Q
q 0.000 g BT 70.87 639.05 Td ( ) Tj ET Q
q 0.000 g BT 70.87 624.87 Td (Pour spécifier qu'un argument doit être récupéré sans évaluation, faites précéder le nom de) Tj ET Q
q 0.000 g BT 70.87 610.70 Td (l'argument du caractère  ") Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 184.71 610.70 Td ( :) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 190.82 610.70 Td (". Par exemple, la fonction suivante accepte des fonctions en arguments :) Tj ET Q
q 0.000 g BT 70.87 596.53 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 582.95 Td ( print-body: func [:fun] [probe second :fun]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 568.18 Td ( ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 70.87 554.01 Td (print-body) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 120.31 554.01 Td ( affiche le corps de la fonction qui lui est fournie en argument. L'argument est précédé de) Tj ET Q
q 0.000 g BT 70.87 539.83 Td (deux points, qui indique que la valeur du mot devrait être obtenue, mais  ne pas être évaluée.) Tj ET Q
q 0.000 g BT 70.87 525.66 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 512.09 Td ( print-body reform) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 497.92 Td ( [form reduce value]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 483.74 Td ( print-body rejoin) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 469.57 Td ( [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 455.40 Td (     if empty? block: reduce block [return block]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 441.22 Td (     append either series? first block [copy first block] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 427.05 Td (         form first block] next block) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 412.88 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 398.10 Td ( ) Tj ET Q
q 0.000 g BT 70.87 383.93 Td (Définir des raffinements) Tj ET Q
q 0.000 g BT 70.87 369.76 Td ( ) Tj ET Q
q 0.000 g BT 70.87 355.58 Td (Les raffinements peuvent être utilisés pour spécifier des variantes  à l'utilisation normale de la) Tj ET Q
q 0.000 g BT 70.87 341.41 Td (fonction, ou encore pour fournir des arguments optionnels. Les raffinements sont ajoutés au bloc de) Tj ET Q
q 0.000 g BT 70.87 327.24 Td (spécification d'interface de la fonction, sous la forme de  mots précédés du symbole "slash" \() Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 480.61 327.24 Td (/) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 483.39 327.24 Td (\). A) Tj ET Q
q 0.000 g BT 70.87 313.06 Td (l'intérieur du corps de la fonction, le mot lié au raffinement doit être testé comme une valeur logique ) Tj ET Q
q 0.000 g BT 70.87 298.89 Td (afin de déterminer si le raffinement a été fourni, lorsque la fonction a été appelée.) Tj ET Q
q 0.000 g BT 70.87 284.72 Td ( ) Tj ET Q
q 0.000 g BT 70.87 270.54 Td (Par exemple, le code suivant ajoute un raffinement à la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 355.46 270.54 Td (sum) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 376.02 270.54 Td (, qui a déjà été décrite dans les ) Tj ET Q
q 0.000 g BT 70.87 256.37 Td (exemples précédents :) Tj ET Q
q 0.000 g BT 70.87 242.20 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 228.62 Td ( sum: func [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 214.45 Td (     "Return the sum of two numbers.") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 200.28 Td (     arg1 [number!] "first number") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 186.10 Td (     arg2 [number!] "second number") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 171.93 Td (     /average "return the average of the numbers") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 157.76 Td ( ][) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 143.58 Td (     either average [arg1 + arg2 / 2][arg1 + arg2]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 129.41 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 114.64 Td ( ) Tj ET Q
q 0.000 g BT 70.87 100.46 Td (La fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 122.57 100.46 Td (sum) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 143.13 100.46 Td ( posséde le raffinement ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 249.85 100.46 Td (/average) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 290.43 100.46 Td (. Dans le corps de la fonction,  le mot ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 457.73 100.46 Td (average) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 493.86 100.46 Td ( est) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 501.28 45.79 Td (Page 12/25) Tj ET Q

endstream
endobj
27 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 28 0 R>>
endobj
28 0 obj
<</Length 5875>>
stream
2 J
0.85 w
BT /F1 10.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
q 0.000 g BT 70.87 794.95 Td (testé par la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 160.92 794.95 Td (either) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 188.15 794.95 Td (, qui retourne ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 249.85 794.95 Td (true) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 267.08 794.95 Td (, si ce raffinement a été fourni :) Tj ET Q
q 0.000 g BT 70.87 780.78 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 767.21 Td ( print sum/average 123 321) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 753.03 Td ( 222) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 738.26 Td ( ) Tj ET Q
q 0.000 g BT 70.87 724.09 Td (Pour définir un raffinement qui accepte des arguments supplémentaires,  faites suivre le raffinement) Tj ET Q
q 0.000 g BT 70.87 709.91 Td (des définitions des arguments :) Tj ET Q
q 0.000 g BT 70.87 695.74 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 682.17 Td ( sum: func [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 667.99 Td (     "Return the sum of two numbers.") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 653.82 Td (     arg1 [number!] "first number") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 639.65 Td (     arg2 [number!] "second number") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 625.47 Td (     /times "multiply the result") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 611.30 Td (     amount [number!] "how many times") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 597.13 Td ( ][) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 582.95 Td (     either times [arg1 + arg2 * amount][arg1 + arg2]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 568.78 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 554.01 Td ( ) Tj ET Q
q 0.000 g BT 70.87 539.83 Td (La variable ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 122.56 539.83 Td (amount) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 155.91 539.83 Td ( est seulement valide lorsque le raffinement ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 351.55 539.83 Td (times) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 377.67 539.83 Td ( est présent. Voici un exemple :) Tj ET Q
q 0.000 g BT 70.87 525.66 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 512.09 Td ( print sum/times 123 321 10) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 497.92 Td ( 4440) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 483.14 Td ( ) Tj ET Q
q 0.000 g BT 70.87 468.97 Td (N'oubliez pas de contrôler l'existence du raffinement, avant d'utiliser les arguments supplémentaires.) Tj ET Q
q 0.000 g BT 70.87 454.80 Td (Si l'argument d'un raffinement est utilisé sans que le raffinement soit spécifié, il prendra une valeur : ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 70.87 440.62 Td (none) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 94.76 440.62 Td (.) Tj ET Q
q 0.000 g BT 70.87 426.45 Td ( ) Tj ET Q
q 0.000 g BT 70.87 412.28 Td (Variables locales) Tj ET Q
q 0.000 g BT 70.87 398.10 Td ( ) Tj ET Q
q 0.000 g BT 70.87 383.93 Td (Une variable locale est un mot dont la valeur est définie ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 319.32 383.93 Td (à l'intérieur du contexte) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 422.39 383.93 Td ( de la fonction. Les) Tj ET Q
q 0.000 g BT 70.87 369.76 Td (modifications d'une variable locale affecteront seulement la fonction dans laquelle la variable est) Tj ET Q
q 0.000 g BT 70.87 355.58 Td (définie. Si le même mot est utilisé en dehors de la fonction, il ne sera pas affecté par les changements) Tj ET Q
q 0.000 g BT 70.87 341.41 Td (de la variable locale  du même nom, dont les valeurs sont définies dans le contexte de la fonction.) Tj ET Q
q 0.000 g BT 70.87 327.24 Td ( ) Tj ET Q
q 0.000 g BT 70.87 313.06 Td (Par convention, les variables locales sont caractérisées par le raffinement ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 399.89 313.06 Td (/local) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 425.46 313.06 Td (. Le raffinement ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 497.72 313.06 Td (/local) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 298.89 Td (est suivi par la liste de mots qui sont utilisés comme variables  locales au sein de la fonction.) Tj ET Q
q 0.000 g BT 70.87 284.72 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 271.14 Td ( average: func [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 256.97 Td (     block "Block of numbers") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 242.80 Td (     /local total length) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 228.62 Td ( ][) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 214.45 Td (     total: 0) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 200.28 Td (     length: length? block) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 186.10 Td (     foreach num block [total: total + num]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 171.93 Td (     either length > 0 [total / length][0]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 157.76 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 142.98 Td ( ) Tj ET Q
q 0.000 g BT 70.87 128.81 Td (Ici, les mots ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 126.44 128.81 Td (total) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 147.55 128.81 Td ( et ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 161.45 128.81 Td (length) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 191.45 128.81 Td ( sont les variables locales à la fonction.) Tj ET Q
q 0.000 g BT 70.87 114.64 Td ( ) Tj ET Q
q 0.000 g BT 70.87 100.46 Td (Une autre méthode pour créer ces variables locales est d'utiliser la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 406.25 100.46 Td (function) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 445.69 100.46 Td (, qui est identique) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 501.28 45.79 Td (Page 13/25) Tj ET Q

endstream
endobj
29 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 30 0 R>>
endobj
30 0 obj
<</Length 5238>>
stream
2 J
0.85 w
BT /F1 10.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
q 0.000 g BT 70.87 794.95 Td (à ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 79.21 794.95 Td (func) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 100.32 794.95 Td (, mais accepte un bloc séparé définissant les mots locaux :) Tj ET Q
q 0.000 g BT 70.87 780.78 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 767.21 Td ( average: function [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 753.03 Td (     block "Block of numbers") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 738.86 Td ( ][) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 724.69 Td (     total length       ) Tj ET Q
q 1.000 0.000 0.000 rg BT 186.07 724.69 Td ( ][) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 710.51 Td (     total: 0) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 696.34 Td (     length: length? block) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 682.17 Td (     foreach num block [total: total + num]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 667.99 Td (     either length > 0 [total / length][0]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 653.82 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 639.05 Td ( ) Tj ET Q
q 0.000 g BT 70.87 624.87 Td (Dans cet exemple, notez que le raffinement ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 266.52 624.87 Td (/local) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 292.09 624.87 Td ( n'est pas utilisé avec la  fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 440.74 624.87 Td (function) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 480.18 624.87 Td (.) Tj ET Q
q 0.000 g BT 70.87 610.70 Td ( ) Tj ET Q
q 0.000 g BT 70.87 596.53 Td (La fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 122.57 596.53 Td (function) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 162.01 596.53 Td ( crée ce raffinement à votre place.  Si une variable locale est utilisée avant que sa) Tj ET Q
q 0.000 g BT 70.87 582.35 Td (valeur  ne soit définie dans le corps de sa fonction, elle prendra une valeur ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 403.26 582.35 Td (none) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 427.15 582.35 Td (.) Tj ET Q
q 0.000 g BT 70.87 568.18 Td ( ) Tj ET Q
q 0.000 g BT 70.87 554.01 Td (Variables locales contenant des séries) Tj ET Q
q 0.000 g BT 70.87 539.83 Td ( ) Tj ET Q
q 0.000 g BT 70.87 525.66 Td (Les variables locales qui manipulent des séries doivent être copiées \() Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 378.22 525.66 Td (copy) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 401.56 525.66 Td (\) si ces séries sont utilisées) Tj ET Q
q 0.000 g BT 70.87 511.49 Td ( plusieurs fois. Par exemple, si vous désirez que la chaîne ") Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 334.53 511.49 Td (*) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 338.42 511.49 Td (" soit identique à chaque fois que  vous) Tj ET Q
q 0.000 g BT 70.87 497.32 Td (appelez la fonction ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 157.03 497.32 Td (start-name) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 204.82 497.32 Td (, vous devrez écrire :) Tj ET Q
q 0.000 g BT 70.87 483.14 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 469.57 Td ( star-name: func [name] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 455.40 Td (     stars: copy "**") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 441.22 Td (     insert next stars name) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 427.05 Td (     stars) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 412.88 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 398.10 Td ( ) Tj ET Q
q 0.000 g BT 70.87 383.93 Td (Sinon, si vous écrivez simplement :) Tj ET Q
q 0.000 g BT 70.87 369.76 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 356.18 Td ( star-name: func [name] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 342.01 Td (     stars: "**") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 327.84 Td (     insert next stars name) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 313.66 Td (     stars) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 299.49 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 284.72 Td ( ) Tj ET Q
q 0.000 g BT 70.87 270.54 Td (vous utiliserez la même chaîne chaque fois. Et chaque fois que la fonction est employée, la valeur) Tj ET Q
q 0.000 g BT 70.87 256.37 Td (précédente apparaîtra dans le résultat.) Tj ET Q
q 0.000 g BT 70.87 242.20 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 228.62 Td ( print star-name "test") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 214.45 Td ( *test*) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 200.28 Td ( print star-name "this") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 186.10 Td ( *thistest*) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 171.33 Td ( ) Tj ET Q
q 0.000 g BT 70.87 157.16 Td (C'est un principe IMPORTANT à se rappeler, car si vous l'oubliez, vous risquez d'observer des ) Tj ET Q
q 0.000 g BT 70.87 142.98 Td (résultats aberrants dans vos programmes.) Tj ET Q
q 0.000 g BT 70.87 128.81 Td ( ) Tj ET Q
q 0.000 g BT 70.87 114.64 Td (Renvoyer une valeur) Tj ET Q
q 0.000 g BT 70.87 100.46 Td ( ) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 501.28 45.79 Td (Page 14/25) Tj ET Q

endstream
endobj
31 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 32 0 R>>
endobj
32 0 obj
<</Length 4555>>
stream
2 J
0.85 w
BT /F1 10.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
q 0.000 g BT 70.87 794.95 Td (Comme vous le savez depuis le chapitre sur les Expressions,  l'évaluation d'un bloc renvoie la ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 70.87 780.78 Td (dernière) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 107.55 780.78 Td ( valeur évaluée qu'il contient :) Tj ET Q
q 0.000 g BT 70.87 766.61 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 753.03 Td ( do [1 + 3  5 + 7]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 738.86 Td ( 12) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 724.09 Td ( ) Tj ET Q
q 0.000 g BT 70.87 709.91 Td (C'est aussi vrai pour les fonctions. La dernière valeur est retournée  comme le résultat de la fonction :) Tj ET Q
q 0.000 g BT 70.87 695.74 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 682.17 Td ( sum: func [a b] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 667.99 Td (     print a) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 653.82 Td (     print b) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 639.65 Td (     a + b) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 625.47 Td ( ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 611.30 Td ( print sum 123 321) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 597.13 Td ( 123) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 582.95 Td ( 321) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 568.78 Td ( 444) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 554.01 Td ( ) Tj ET Q
q 0.000 g BT 70.87 539.83 Td (De plus, il est possible d'utiliser la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 260.63 539.83 Td (return) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 289.52 539.83 Td ( pour arrêter  l'évaluation de la fonction à n'importe) Tj ET Q
q 0.000 g BT 70.87 525.66 Td (quel point et retourner la valeur :) Tj ET Q
q 0.000 g BT 70.87 511.49 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 497.92 Td ( find-value: func [series value] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 483.74 Td (     forall series [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 469.57 Td (         if \(first series\) = value [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 455.40 Td (             return series) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 441.22 Td (         ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 427.05 Td (     ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 412.88 Td (     none) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 398.70 Td ( ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 384.53 Td ( probe find-value [1 2 3 4] 3) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 370.36 Td ( [3 4]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 355.58 Td ( ) Tj ET Q
q 0.000 g BT 70.87 341.41 Td (Dans l'exemple, si la valeur "3" est trouvée, la fonction retourne la série à la position de la) Tj ET Q
q 0.000 g BT 70.87 327.24 Td (correspondance.) Tj ET Q
q 0.000 g BT 70.87 313.06 Td ( ) Tj ET Q
q 0.000 g BT 70.87 298.89 Td (Sinon, la fonction renvoie ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 185.93 298.89 Td (none) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 209.82 298.89 Td (.) Tj ET Q
q 0.000 g BT 70.87 284.72 Td ( ) Tj ET Q
q 0.000 g BT 70.87 270.54 Td (Pour arrêter l'évaluation d'une fonction sans retourner de valeur, utilisez la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 439.86 270.54 Td (exit) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 457.09 270.54 Td ( :) Tj ET Q
q 0.000 g BT 70.87 256.37 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 242.80 Td ( source: func [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 228.62 Td (     "Print the source code for a word") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 214.45 Td (     'word [word!]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 200.28 Td ( ][) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 186.10 Td (     prin join word ": ") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 171.93 Td (     if not value? word [print "undefined" exit]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 157.76 Td (     either any [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 143.58 Td (         native? get word op? get word action? get word) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 129.41 Td (     ][) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 115.24 Td (         print ["native" mold third get word]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 101.06 Td (     ][print mold get word]) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 501.28 45.79 Td (Page 15/25) Tj ET Q

endstream
endobj
33 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 34 0 R>>
endobj
34 0 obj
<</Length 4338>>
stream
2 J
0.85 w
BT /F2 8.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
BT /F1 10.00 Tf ET
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 795.55 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 780.78 Td ( ) Tj ET Q
q 0.000 g BT 70.87 766.61 Td (Retourner plusieurs valeurs) Tj ET Q
q 0.000 g BT 70.87 752.43 Td ( ) Tj ET Q
q 0.000 g BT 70.87 738.26 Td (Pour qu'une fonction renvoie plusieurs valeurs, utilisez un bloc.  Vous pouvez faire cela facilement en) Tj ET Q
q 0.000 g BT 70.87 724.09 Td (retournant un bloc qui a été "réduit" \(avec ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 257.51 724.09 Td (reduce) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 290.30 724.09 Td (\).) Tj ET Q
q 0.000 g BT 70.87 709.91 Td ( ) Tj ET Q
q 0.000 g BT 70.87 695.74 Td (Par exemple :) Tj ET Q
q 0.000 g BT 70.87 681.57 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 667.99 Td ( find-value: func [series value /local count] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 653.82 Td (     forall series [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 639.65 Td (         if \(first series\) = value [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 625.47 Td (             reduce [series  index? series]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 611.30 Td (         ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 597.13 Td (     ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 582.95 Td (     none) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 568.78 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 554.01 Td ( ) Tj ET Q
q 0.000 g BT 70.87 539.83 Td (La fonction renvoie un bloc constitué de : la série et de l'index où la valeur a été trouvée.) Tj ET Q
q 0.000 g BT 70.87 525.66 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 512.09 Td ( probe find-value [1 2 3 4] 3) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 497.92 Td ( [[3 4] 3]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 483.14 Td ( ) Tj ET Q
q 0.000 g BT 70.87 468.97 Td (La fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 122.57 468.97 Td (reduce) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 155.36 468.97 Td ( est nécessaire pour créer un bloc de valeurs à  partir du bloc de mots fourni.) Tj ET Q
q 0.000 g BT 70.87 454.80 Td ( ) Tj ET Q
q 0.000 g BT 70.87 440.62 Td (Ne retournez pas les variables locales elles-mêmes.  C'est un mode de fonctionnement non supporté) Tj ET Q
q 0.000 g BT 70.87 426.45 Td (\(actuellement\).) Tj ET Q
q 0.000 g BT 70.87 412.28 Td ( ) Tj ET Q
q 0.000 g BT 70.87 398.10 Td (Pour associer facilement des variables à la valeur de retour de la fonction, employez la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 495.50 398.10 Td (set) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 509.95 398.10 Td ( :) Tj ET Q
q 0.000 g BT 70.87 383.93 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 370.36 Td ( set [block index] find-value [1 2 3 4] 3) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 356.18 Td ( print block) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 342.01 Td ( 3 4) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 327.84 Td ( print index) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 313.66 Td ( 3) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 298.89 Td (  ) Tj ET Q
BT /F5 14.00 Tf ET
q 0.000 g BT 70.87 255.17 Td (Fonctions imbriquées) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 242.20 Td (  ) Tj ET Q
q 0.000 g BT 70.87 228.02 Td (Des fonctions peuvent en définir d'autres.) Tj ET Q
q 0.000 g BT 70.87 213.85 Td ( ) Tj ET Q
q 0.000 g BT 70.87 199.68 Td (Les sous-fonctions peuvent être globales, locales, ou retournées en tant que résultat, selon le but) Tj ET Q
q 0.000 g BT 70.87 185.50 Td (choisi.) Tj ET Q
q 0.000 g BT 70.87 171.33 Td ( ) Tj ET Q
q 0.000 g BT 70.87 157.16 Td (Par exemple, pour créer une fonction globale à l'intérieur d'une fonction, rattachez-la à  une variable) Tj ET Q
q 0.000 g BT 70.87 142.98 Td (globale :) Tj ET Q
q 0.000 g BT 70.87 128.81 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 115.24 Td ( make-timer: func [code] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 101.06 Td (     timer: func [time] code) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 501.28 45.79 Td (Page 16/25) Tj ET Q

endstream
endobj
35 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 36 0 R>>
endobj
36 0 obj
<</Length 4782>>
stream
2 J
0.85 w
BT /F2 8.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
BT /F1 10.00 Tf ET
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 795.55 Td ( ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 781.38 Td ( make-timer [wait time]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 767.21 Td ( timer 5) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 752.43 Td ( ) Tj ET Q
q 0.000 g BT 70.87 738.26 Td (Pour rendre locale une fonction, définissez-la comme une variable locale :) Tj ET Q
q 0.000 g BT 70.87 724.09 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 710.51 Td ( do-timer: func [code delay /local timer] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 696.34 Td (     timer: func [time] code) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 682.17 Td (     timer delay) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 667.99 Td (     timer delay) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 653.82 Td ( ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 639.65 Td ( do-timer [wait time] 5) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 624.87 Td ( ) Tj ET Q
q 0.000 g BT 70.87 610.70 Td (La fonction ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 122.57 610.70 Td (timer) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 144.79 610.70 Td ( existe seulement durant l'instant où la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 355.14 610.70 Td (do-timer) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 395.14 610.70 Td (  est évaluée.) Tj ET Q
q 0.000 g BT 70.87 596.53 Td ( ) Tj ET Q
q 0.000 g BT 70.87 582.35 Td (Pour retourner la fonction en tant que résultat :) Tj ET Q
q 0.000 g BT 70.87 568.18 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 554.61 Td ( make-timer: func [code] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 540.43 Td (     func [time] code) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 526.26 Td ( ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 512.09 Td ( timer: make-timer [wait time]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 497.92 Td ( timer 5) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 483.14 Td ( ) Tj ET Q
q 0.000 g BT 70.87 454.80 Td ( ) Tj ET Q
q 0.000 g BT 70.87 440.62 Td (Utilisez des variables locales correctes) Tj ET Q
q 0.000 g BT 242.58 440.62 Td ( :) Tj ET Q
q 0.000 g BT 70.87 426.45 Td ( ) Tj ET Q
q 0.000 g BT 70.87 412.28 Td (Vous devriez éviter d'employer des variables locales à la fonction de niveau supérieur, dans une) Tj ET Q
q 0.000 g BT 70.87 398.10 Td (sous-fonction imbriquée.) Tj ET Q
q 0.000 g BT 70.87 383.93 Td ( ) Tj ET Q
q 0.000 g BT 70.87 369.76 Td (Par exemple :) Tj ET Q
q 0.000 g BT 70.87 355.58 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 342.01 Td ( make-timer: func [code delay] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 327.84 Td (     timer: func [time] [wait time + delay]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 313.66 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 298.89 Td ( ) Tj ET Q
q 0.000 g BT 70.87 284.72 Td (Ici, le mot ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 116.44 284.72 Td (delay) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 140.34 284.72 Td ( appartient dynamiquement à la fonction de ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 334.89 284.72 Td (make-timer) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 388.24 284.72 Td (.  Ceci devrait être évité du fait) Tj ET Q
q 0.000 g BT 70.87 270.54 Td (que la valeur de ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 144.80 270.54 Td (delay) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 168.70 270.54 Td ( changera dans des appels suivants à ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 339.35 270.54 Td (make-timer) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 392.70 270.54 Td (. ) Tj ET Q
q 0.000 g BT 70.87 256.37 Td (  ) Tj ET Q
BT /F5 14.00 Tf ET
q 0.000 g BT 70.87 212.65 Td (Fonctions anonymes) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 199.68 Td (  ) Tj ET Q
q 0.000 g BT 70.87 185.50 Td (Les noms de fonctions sont des variables.  En REBOL, une variable est une variable,) Tj ET Q
q 0.000 g BT 70.87 171.33 Td (indépendamment de ce qu'elle manipule. Il n'y a rien de spécial concernant les variables de fonctions.) Tj ET Q
q 0.000 g BT 70.87 157.16 Td (En outre, les fonctions ne nécessitent pas de noms.) Tj ET Q
q 0.000 g BT 70.87 142.98 Td ( ) Tj ET Q
q 0.000 g BT 70.87 128.81 Td (Vous pouvez créer une fonction et l'évaluer immédiatement, la stocker dans un bloc, la passer ) Tj ET Q
q 0.000 g BT 70.87 114.64 Td (comme argument à une autre fonction, ou retourner son résultat.  Une telle fonction serait dite) Tj ET Q
q 0.000 g BT 70.87 100.46 Td ("anonyme".) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 501.28 45.79 Td (Page 17/25) Tj ET Q

endstream
endobj
37 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 38 0 R>>
endobj
38 0 obj
<</Length 4662>>
stream
2 J
0.85 w
BT /F1 10.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
q 0.000 g BT 70.87 794.95 Td ( ) Tj ET Q
q 0.000 g BT 70.87 780.78 Td (Voici un exemple qui crée un bloc de fonctions anonymes :) Tj ET Q
q 0.000 g BT 70.87 766.61 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 753.03 Td ( funcs: []) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 738.86 Td ( repeat n 10 [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 724.69 Td (     append funcs func [t] compose [t + \(n * 100\)]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 710.51 Td ( ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 696.34 Td ( print funcs/1 10) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 682.17 Td ( 110) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 667.99 Td ( print funcs/5 10) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 653.82 Td ( 510) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 639.05 Td ( ) Tj ET Q
q 0.000 g BT 70.87 624.87 Td (Les fonctions peuvent aussi être créées, puis passées à d'autres fonctions . Par exemple, quand vous) Tj ET Q
q 0.000 g BT 70.87 610.70 Td (utilisez la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 152.57 610.70 Td (sort) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 171.46 610.70 Td ( avec votre propre fonction de comparaison,  vous fournissez votre fonction) Tj ET Q
q 0.000 g BT 70.87 596.53 Td (comme argument à ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 159.79 596.53 Td (sort/compare) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 223.14 596.53 Td ( :) Tj ET Q
q 0.000 g BT 70.87 582.35 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 568.78 Td ( sort/compare data func [a b] [a > b]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 554.01 Td (  ) Tj ET Q
BT /F5 14.00 Tf ET
q 0.000 g BT 70.87 510.29 Td (Fonctions conditionnelles) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 497.32 Td (  ) Tj ET Q
q 0.000 g BT 70.87 483.14 Td (Puisque des fonctions sont créées dynamiquement par évaluation,  vous pouvez déterminer comment) Tj ET Q
q 0.000 g BT 70.87 468.97 Td (vous souhaitez créer une fonction,  sur la base d'une autre information. C'est une manière de fournir) Tj ET Q
q 0.000 g BT 70.87 454.80 Td (du code conditionnel comme  cela existe dans des langages de macro ou d'autres langages de) Tj ET Q
q 0.000 g BT 70.87 440.62 Td (programmation.) Tj ET Q
q 0.000 g BT 70.87 426.45 Td ( ) Tj ET Q
q 0.000 g BT 70.87 412.28 Td (Au sein du langage REBOL, ce type de code conditionnel est construit avec du code REBOL) Tj ET Q
q 0.000 g BT 70.87 398.10 Td (classique.) Tj ET Q
q 0.000 g BT 70.87 383.93 Td ( ) Tj ET Q
q 0.000 g BT 70.87 369.76 Td (En particulier, vous pouvez créer une version d'une fonction pour le débuggage, qui affichera des ) Tj ET Q
q 0.000 g BT 70.87 355.58 Td (informations supplémentaires :) Tj ET Q
q 0.000 g BT 70.87 341.41 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 327.84 Td ( test-mode: on) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 313.66 Td ( timer: either test-mode [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 299.49 Td (     func [delay] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 285.32 Td (         print "delaying...") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 271.14 Td (         wait delay) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 256.97 Td (         print "resuming") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 242.80 Td (     ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 228.62 Td ( ][) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 214.45 Td (     func [delay] [wait delay]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 200.28 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 185.50 Td ( ) Tj ET Q
q 0.000 g BT 70.87 171.33 Td (Ici, l'une des deux fonctions \() Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 199.51 171.33 Td (func [delay]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 250.65 171.33 Td (\)est définie en se basant sur le test \() Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 411.84 171.33 Td (either test-mode) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 484.09 171.33 Td (\)  de la) Tj ET Q
q 0.000 g BT 70.87 157.16 Td (valeur du "test-mode" courant. Vous pouvez encore écrire de façon plus concise :) Tj ET Q
q 0.000 g BT 70.87 142.98 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 129.41 Td ( timer: func [delay] either test-mode [[) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 115.24 Td (     print "delaying...") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 101.06 Td (     wait delay) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 501.28 45.79 Td (Page 18/25) Tj ET Q

endstream
endobj
39 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 40 0 R>>
endobj
40 0 obj
<</Length 5243>>
stream
2 J
0.85 w
BT /F2 8.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
BT /F1 10.00 Tf ET
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 795.55 Td (     print "resuming") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 781.38 Td ( ]][[wait delay]]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 766.61 Td (  ) Tj ET Q
BT /F5 14.00 Tf ET
q 0.000 g BT 70.87 722.89 Td (Attributs de fonctions) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 709.91 Td (  ) Tj ET Q
q 0.000 g BT 70.87 695.74 Td (Les attributs de fonctions permettent de contrôler spécifiquement certains comportements  comme la) Tj ET Q
q 0.000 g BT 70.87 681.57 Td (méthode qu'emploie une fonction pour manipuler les erreurs ou pour rendre la main \() Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 446.83 681.57 Td (exit) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 462.39 681.57 Td (\).) Tj ET Q
q 0.000 g BT 70.87 667.39 Td ( ) Tj ET Q
q 0.000 g BT 70.87 653.22 Td (Les attributs sont des mots spécifiés dans un bloc optionnel, à l'intérieur des spécifications d'interface.) Tj ET Q
q 0.000 g BT 70.87 639.05 Td (Il y a actuellement deux attributs \(ce sont des fonctions\) : ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 325.99 639.05 Td (catch) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 352.11 639.05 Td ( et ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 366.01 639.05 Td (throw) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 393.23 639.05 Td (.) Tj ET Q
q 0.000 g BT 70.87 624.87 Td ( ) Tj ET Q
q 0.000 g BT 70.87 610.70 Td (Les messages d'erreur sont affichés, typiquement, lorsque l'une d'elles se produit à l'intérieur du corps) Tj ET Q
q 0.000 g BT 70.87 596.53 Td (de la fonction.) Tj ET Q
q 0.000 g BT 70.87 582.35 Td ( ) Tj ET Q
q 0.000 g BT 70.87 568.18 Td (catch) Tj ET Q
q 0.000 g BT 70.87 554.01 Td ( ) Tj ET Q
q 0.000 g BT 70.87 539.83 Td (Si l'attribut ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 120.02 539.83 Td (catch) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 146.14 539.83 Td ( est spécifié, les erreurs émises à l'intérieur de la fonction  seront capturées) Tj ET Q
q 0.000 g BT 70.87 525.66 Td (automatiquement par celle-ci.) Tj ET Q
q 0.000 g BT 70.87 511.49 Td ( ) Tj ET Q
q 0.000 g BT 70.87 497.32 Td (Les erreurs ne sont pas affichées au sein de la fonction, mais  au point où la fonction se trouvait.) Tj ET Q
q 0.000 g BT 70.87 483.14 Td ( ) Tj ET Q
q 0.000 g BT 70.87 468.97 Td (Ceci peut être utile si vous avez une fonction de type mezzanine et que vous voulez) Tj ET Q
q 0.000 g BT 70.87 454.80 Td ( ) Tj ET Q
q 0.000 g BT 70.87 440.62 Td (voir apparaître l'erreur précisément là où elle s'est produite :) Tj ET Q
q 0.000 g BT 70.87 426.45 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 412.88 Td (    root: func [[catch] num [number!]] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 398.70 Td (        if num ) Tj ET Q
q 1.000 0.000 0.000 rg BT 142.87 398.70 Td (            throw make error! "only positive numbers") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 384.53 Td (        ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 370.36 Td (        square-root num) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 356.18 Td (    ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 342.01 Td ( root 4) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 327.84 Td ( 2) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 313.66 Td ( root -4) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 299.49 Td ( **User Error: only positive numbers) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 285.32 Td ( **Where: root -4) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 270.54 Td ( ) Tj ET Q
q 0.000 g BT 70.87 256.37 Td (Remarquez que dans cet exemple, l'erreur se produit où ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 322.89 256.37 Td (root) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 342.33 256.37 Td ( a été appelée  quoique l'erreur réelle se) Tj ET Q
q 0.000 g BT 70.87 242.20 Td (soit produite dans le corps de la fonction. Ceci est dû  à l'usage de l'attribut ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 404.86 242.20 Td (catch) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 430.98 242.20 Td (.) Tj ET Q
q 0.000 g BT 70.87 228.02 Td ( ) Tj ET Q
q 0.000 g BT 70.87 213.85 Td (Sans l'attribut ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 133.92 213.85 Td (catch) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 160.04 213.85 Td (, l'erreur se produirait dans la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 329.80 213.85 Td (root) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 349.24 213.85 Td ( :) Tj ET Q
q 0.000 g BT 70.87 199.68 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 186.10 Td ( root: func [num [number!]] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 171.93 Td (     square-root num) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 157.76 Td ( ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 143.58 Td ( root -4) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 129.41 Td ( ** Math Error: Positive number required.) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 115.24 Td ( ** Where: square-root num) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 100.46 Td ( ) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 501.28 45.79 Td (Page 19/25) Tj ET Q

endstream
endobj
41 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 42 0 R>>
endobj
42 0 obj
<</Length 6767>>
stream
2 J
0.85 w
BT /F1 10.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
q 0.000 g BT 70.87 794.95 Td (L'utilisateur peut ne pas rien savoir du contenu de la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 342.37 794.95 Td (root) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 361.81 794.95 Td (.  Et le message d'erreur porterait à) Tj ET Q
q 0.000 g BT 70.87 780.78 Td (confusion.  En effet, l'utilisateur connait seulement ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 295.67 780.78 Td (root) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 315.11 780.78 Td (, mais ici l'erreur se trouve dans l'usage de la) Tj ET Q
q 0.000 g BT 70.87 766.61 Td (racine carrée.) Tj ET Q
q 0.000 g BT 70.87 752.43 Td ( ) Tj ET Q
q 0.000 g BT 70.87 738.26 Td (Ne confondez pas l'attribut ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 191.73 738.26 Td (catch) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 217.85 738.26 Td ( avec la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 292.89 738.26 Td (catch) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 319.01 738.26 Td (. Bien qu'ils se ressemblent, la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 494.33 738.26 Td (catch) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 724.09 Td (s'applique à n'importe quel bloc à évaluer.) Tj ET Q
q 0.000 g BT 70.87 709.91 Td ( ) Tj ET Q
q 0.000 g BT 70.87 695.74 Td (throw) Tj ET Q
q 0.000 g BT 70.87 681.57 Td ( ) Tj ET Q
q 0.000 g BT 70.87 667.39 Td (L'attribut ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 111.69 667.39 Td (throw) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 138.91 667.39 Td ( vous permet d'écrire vos propres fonctions de contrôle,  comme dans ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 450.39 667.39 Td (for) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 463.72 667.39 Td (, ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 469.28 667.39 Td (foreach) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 505.40 667.39 Td (, ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 510.96 667.39 Td (if) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 517.07 667.39 Td (, ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 70.87 653.22 Td (loop) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 91.98 653.22 Td ( et ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 105.88 653.22 Td (forever) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 139.78 653.22 Td (, en forçant vos  fonctions à rendre la main \() Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 334.87 653.22 Td (return) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 363.76 653.22 Td ( ou ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 380.44 653.22 Td (exit) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 397.67 653.22 Td (\).) Tj ET Q
q 0.000 g BT 70.87 639.05 Td ( ) Tj ET Q
q 0.000 g BT 70.87 624.87 Td (Par exemple, la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 180.92 624.87 Td (loop-time) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 225.92 624.87 Td ( :) Tj ET Q
q 0.000 g BT 70.87 610.70 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 597.13 Td ( loop-time: func [time block] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 582.95 Td (     while [now/time ) Tj ET Q
q 1.000 0.000 0.000 rg BT 171.67 582.95 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 568.18 Td ( ) Tj ET Q
q 0.000 g BT 70.87 554.01 Td (évalue un bloc, jusqu'à ce qu'un temps déterminé soit atteint ou dépassé.) Tj ET Q
q 0.000 g BT 70.87 539.83 Td ( ) Tj ET Q
q 0.000 g BT 70.87 525.66 Td (Cette boucle peut être utilisée à l'intérieur d'une fonction :) Tj ET Q
q 0.000 g BT 70.87 511.49 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 497.92 Td ( do-job: func [job][) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 483.74 Td (     loop-time 10:30 [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 469.57 Td (         if error? try [page: read http://www.rebol.com]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 455.40 Td (             [return none]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 441.22 Td (     ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 427.05 Td (     page) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 412.88 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 398.10 Td ( ) Tj ET Q
q 0.000 g BT 70.87 383.93 Td (Maintenant, que se produit-il quand le bloc ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 262.08 383.93 Td ([return none]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 318.78 383.93 Td ( est évalué ?) Tj ET Q
q 0.000 g BT 70.87 369.76 Td ( ) Tj ET Q
q 0.000 g BT 70.87 355.58 Td (Puisque ce bloc est évalué par la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 258.19 355.58 Td (loop-time) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 303.19 355.58 Td (, le retour se fait dans cette  fonction, et pas pour) Tj ET Q
q 0.000 g BT 70.87 341.41 Td (la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 119.23 341.41 Td (do-job) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 149.78 341.41 Td (. Ceci peut être évité avec l'attribut ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 305.65 341.41 Td (throw) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 332.87 341.41 Td ( :) Tj ET Q
q 0.000 g BT 70.87 327.24 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 313.66 Td ( loop-time: func [[throw] time block] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 299.49 Td (     while [now/time ) Tj ET Q
q 1.000 0.000 0.000 rg BT 171.67 299.49 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 284.72 Td ( ) Tj ET Q
q 0.000 g BT 70.87 270.54 Td (L'attribut ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 111.69 270.54 Td (thrown) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 145.02 270.54 Td ( force le retour ou la sortie qui se produit, à être  répercuté au niveau supérieur, ce) Tj ET Q
q 0.000 g BT 70.87 256.37 Td (qui conduirait la fonction précédente ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 234.29 256.37 Td (do-job) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 264.84 256.37 Td ( à rendre la main.) Tj ET Q
q 0.000 g BT 70.87 242.20 Td (  ) Tj ET Q
BT /F5 14.00 Tf ET
q 0.000 g BT 70.87 198.48 Td (Références avant définition) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 185.50 Td (  ) Tj ET Q
q 0.000 g BT 70.87 171.33 Td (Parfois, un script a besoin de faire référence à une fonction avant que celle-ci ne soit  définie.) Tj ET Q
q 0.000 g BT 70.87 157.16 Td ( ) Tj ET Q
q 0.000 g BT 70.87 142.98 Td (Ceci peut se faire de la manière suivante : il est possible de faire référence à une fonction,  sans que) Tj ET Q
q 0.000 g BT 70.87 128.81 Td (celle-ci soit définie, pour peu que cette fonction ne soit pas \(encore\) évaluée.) Tj ET Q
q 0.000 g BT 70.87 114.64 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 101.06 Td ( buy: func [item] [) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 501.28 45.79 Td (Page 20/25) Tj ET Q

endstream
endobj
43 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 44 0 R>>
endobj
44 0 obj
<</Length 5452>>
stream
2 J
0.85 w
BT /F2 8.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
BT /F1 10.00 Tf ET
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 795.55 Td (     append own item) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 781.38 Td (     sell head item   ; la fonction "sell" apparait avant d'être définie ) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 767.21 Td (                     ; mais elle n'est évaluée car dans le corps d'une fonction) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 753.03 Td ( ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 738.86 Td ( sell: func [item] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 724.69 Td (     remove find own item) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 710.51 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 695.74 Td (  ) Tj ET Q
BT /F5 14.00 Tf ET
q 0.000 g BT 70.87 652.02 Td (Portée des variables) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 639.05 Td (  ) Tj ET Q
q 0.000 g BT 70.87 624.87 Td (Le contexte des variables est appelé leur portée. La portée d'une variable peut être globale ou locale. ) Tj ET Q
q 0.000 g BT 70.87 610.70 Td (REBOL utilise une forme de portée statique, qui est appelée :  portée de definition \(definitional) Tj ET Q
q 0.000 g BT 70.87 596.53 Td (scoping\). La portée d'une variable est déterminée lorsque son contexte est défini.  Dans le cas d'une) Tj ET Q
q 0.000 g BT 70.87 582.35 Td (fonction, elle est déterminée par la façon dont la fonction est définie.) Tj ET Q
q 0.000 g BT 70.87 568.18 Td ( ) Tj ET Q
q 0.000 g BT 70.87 554.01 Td (Toutes les variables locales définies dans une fonction ont une portée relative à cette fonction.  Les) Tj ET Q
q 0.000 g BT 70.87 539.83 Td (fonctions et les objets imbriqués sont susceptibles d'accéder aux mots de leurs "parents".) Tj ET Q
q 0.000 g BT 70.87 525.66 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 512.09 Td ( a-func: func [a] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 497.92 Td (     print ["a:" a]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 483.74 Td (     b-func: func [b] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 469.57 Td (         print ["b:" b]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 455.40 Td (         print ["a:" a]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 441.22 Td (         print a + b) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 427.05 Td (     ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 412.88 Td (     b-func 10) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 398.70 Td ( ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 384.53 Td ( a-func 11) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 370.36 Td ( a: 11) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 356.18 Td ( b: 10       ) Tj ET Q
q 1.000 0.000 0.000 rg BT 133.27 356.18 Td ( a: 11       ) Tj ET Q
q 1.000 0.000 0.000 rg BT 195.67 356.18 Td ( 21          ) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 258.07 355.58 Td ( ) Tj ET Q
q 0.000 g BT 70.87 341.41 Td (Notez ici que la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 179.81 341.41 Td (b-func) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 210.36 341.41 Td ( a accès à la variable ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 307.07 341.41 Td (a) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 312.63 341.41 Td ( de ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 329.31 341.41 Td (a-func) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 357.10 341.41 Td (.) Tj ET Q
q 0.000 g BT 70.87 327.24 Td ( ) Tj ET Q
q 0.000 g BT 70.87 313.06 Td (Les mots liés en dehors d'une fonction maintiennent leurs liens, même évalués  dans la fonction.) Tj ET Q
q 0.000 g BT 70.87 298.89 Td ( ) Tj ET Q
q 0.000 g BT 70.87 284.72 Td (C'est une conséquence de cette portée statique, et cela vous permettrait d'écrire vos propres ) Tj ET Q
q 0.000 g BT 70.87 270.54 Td (fonctions d'évaluations de bloc. \(comme pour ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 273.98 270.54 Td (if) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 280.09 270.54 Td (, ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 285.65 270.54 Td (while) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 310.66 270.54 Td (, ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 316.22 270.54 Td (loop) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 337.33 270.54 Td (\).) Tj ET Q
q 0.000 g BT 70.87 256.37 Td ( ) Tj ET Q
q 0.000 g BT 70.87 242.20 Td (Par exemple, voici une fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 212.60 242.20 Td (ifs) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 224.27 242.20 Td ( qui évalue un bloc sur trois,  elle se base sur le test conditionnel) Tj ET Q
q 0.000 g BT 70.87 228.02 Td (d'un signe :) Tj ET Q
q 0.000 g BT 70.87 213.85 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 200.28 Td ( ifs: func [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 186.10 Td (     "If positive do block 1, zero do block 2, minus do 3") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 171.93 Td (     condition block1 block2 block3) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 157.76 Td ( ][) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 143.58 Td (     if positive? condition [return do block1]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 129.41 Td (     if negative? condition [return do block3]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 115.24 Td (     return do block2) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 101.06 Td ( ]) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 501.28 45.79 Td (Page 21/25) Tj ET Q

endstream
endobj
45 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 46 0 R>>
endobj
46 0 obj
<</Length 4910>>
stream
2 J
0.85 w
BT /F2 8.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
BT /F1 10.00 Tf ET
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 795.55 Td ( print ifs 12:00 - now/time ["morning"]["noon"]["night"]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 781.38 Td ( night) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 766.61 Td ( ) Tj ET Q
q 0.000 g BT 70.87 752.43 Td (Les blocs passés à la fonction peuvent contenir les mêmes mots que ceux utilisés dans la fonction, ) Tj ET Q
q 0.000 g BT 70.87 738.26 Td (sans interférer avec ces mots définis localement à la fonction. Ceci est dù au fait que les  mots passés) Tj ET Q
q 0.000 g BT 70.87 724.09 Td (à la fonction ne lui sont pas liés.) Tj ET Q
q 0.000 g BT 70.87 709.91 Td ( ) Tj ET Q
q 0.000 g BT 70.87 695.74 Td (L'exemple suivant passe à la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 239.53 695.74 Td (ifs) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 251.20 695.74 Td ( les mots ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 293.99 695.74 Td (block1, block2 et block3) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 400.15 695.74 Td ( comme  des mots) Tj ET Q
q 0.000 g BT 70.87 681.57 Td (pré-définis. La fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 174.81 681.57 Td (ifs) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 186.48 681.57 Td ( ne fait pas de confusion entre les mots  passés en arguments et les mots) Tj ET Q
q 0.000 g BT 70.87 667.39 Td (de mêmes noms définis localement :) Tj ET Q
q 0.000 g BT 70.87 653.22 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 639.65 Td ( block1: "morning right now") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 625.47 Td ( block2: "just turned noon") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 611.30 Td ( block3: "evening time") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 597.13 Td ( print ifs \(12:00 - now/time\) [block1][block2][block3]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 582.95 Td ( evening time) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 568.18 Td (  ) Tj ET Q
BT /F5 14.00 Tf ET
q 0.000 g BT 70.87 524.46 Td (Réflectivité des Propriétés) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 511.49 Td (  ) Tj ET Q
q 0.000 g BT 70.87 497.32 Td (La spécification de toutes les fonctions peut être obtenue et manipulée pendant l'exécution.) Tj ET Q
q 0.000 g BT 70.87 483.14 Td ( ) Tj ET Q
q 0.000 g BT 70.87 468.97 Td (Par exemple, vous pouvez afficher le bloc de spécification d'une fonction avec :) Tj ET Q
q 0.000 g BT 70.87 454.80 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 441.22 Td ( probe third :if) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 427.05 Td ( [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 412.88 Td (     "If condition is TRUE, evaluates the block.") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 398.70 Td (     condition) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 384.53 Td (     then-block [block!]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 370.36 Td (     /else "If not true, evaluate this block") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 356.18 Td (     else-block [block!]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 342.01 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 327.24 Td ( ) Tj ET Q
q 0.000 g BT 70.87 313.06 Td (Le code du corps des fonctions peut être obtenu avec :) Tj ET Q
q 0.000 g BT 70.87 298.89 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 285.32 Td ( probe second :append) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 271.14 Td ( [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 256.97 Td (     head either only [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 242.80 Td (         insert/only tail series :value) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 228.62 Td (     ][) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 214.45 Td (         insert tail series :value) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 200.28 Td (     ]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 186.10 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 171.33 Td ( ) Tj ET Q
q 0.000 g BT 70.87 157.16 Td (Les fonctions peuvent être dynamiquement interrogées pendant l'évaluation.) Tj ET Q
q 0.000 g BT 70.87 142.98 Td ( ) Tj ET Q
q 0.000 g BT 70.87 128.81 Td (C'est ainsi que les fonctions ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 197.28 128.81 Td (source) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 230.07 128.81 Td ( et ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 243.97 128.81 Td (help) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 264.53 128.81 Td ( fonctionnent et que les  messages d'erreur sont formatés.) Tj ET Q
q 0.000 g BT 70.87 114.64 Td ( ) Tj ET Q
q 0.000 g BT 70.87 100.46 Td (En plus, ce système est utile pour créer vos propres versions des fonctions existantes.  Par exemple,) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 501.28 45.79 Td (Page 22/25) Tj ET Q

endstream
endobj
47 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 48 0 R>>
endobj
48 0 obj
<</Length 5111>>
stream
2 J
0.85 w
BT /F1 10.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
q 0.000 g BT 70.87 794.95 Td (une fonction utilisateur ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 173.70 794.95 Td (print) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 195.92 794.95 Td ( peut être créée avec exactement les mêmes spécifications  que) Tj ET Q
q 0.000 g BT 70.87 780.78 Td (l'originale ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 115.57 780.78 Td (print) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 137.79 780.78 Td (, mais envoie sa sortie vers une chaîne plutôt que  vers l'écran.) Tj ET Q
q 0.000 g BT 70.87 766.61 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 753.03 Td ( output: make string! 1000) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 738.86 Td ( print-str: func third :print [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 724.69 Td (     repend output [reform :value newline]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 710.51 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 695.74 Td ( ) Tj ET Q
q 0.000 g BT 70.87 681.57 Td (Le nom de l'argument utilisé pour ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 221.18 681.57 Td (print-str) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 259.51 681.57 Td ( est obtenu à partir de la spécification d'interface de ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 490.43 681.57 Td (print) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 512.65 681.57 Td (.) Tj ET Q
q 0.000 g BT 70.87 667.39 Td ( ) Tj ET Q
q 0.000 g BT 70.87 653.22 Td (Vous pouvez examiner cette spécification avec :) Tj ET Q
q 0.000 g BT 70.87 639.05 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 625.47 Td ( probe third :print) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 611.30 Td ( [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 597.13 Td (     "Outputs a value followed by a line break.") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 582.95 Td (     value "The value to print") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 568.78 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 554.01 Td (  ) Tj ET Q
BT /F5 14.00 Tf ET
q 0.000 g BT 70.87 510.29 Td (Fonction d'aide en ligne : Help) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 497.32 Td (  ) Tj ET Q
q 0.000 g BT 70.87 483.14 Td (Une information utile sur toutes les fonctions du système peut être récupérée avec la  fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 489.40 483.14 Td (help) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 509.96 483.14 Td ( :) Tj ET Q
q 0.000 g BT 70.87 468.97 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 455.40 Td ( help send) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 441.22 Td ( USAGE:) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 427.05 Td (     SEND address message /only /header header-obj) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 412.88 Td ( DESCRIPTION:) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 398.70 Td (      Send a message to an address \(or block of addresses\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 384.53 Td (      SEND is a function value.) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 370.36 Td ( ARGUMENTS:) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 356.18 Td (      address -- An address or block of addresses \(Type: email block\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 342.01 Td (      message -- Text of message. First line is subject. \(Type: any\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 327.84 Td ( REFINEMENTS:) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 313.66 Td (      /only -- Send only one message to multiple addresses) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 299.49 Td (      /header -- Supply your own custom header) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 285.32 Td (          header-obj -- The header to use \(Type: object\)) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 270.54 Td ( ) Tj ET Q
q 0.000 g BT 70.87 256.37 Td (Toutes ces informations proviennent de la définition de la fonction.) Tj ET Q
q 0.000 g BT 70.87 242.20 Td ( ) Tj ET Q
q 0.000 g BT 70.87 228.02 Td (De l'aide peut être obtenue pour tous les types de fonctions, pas uniquement pour  les fonctions) Tj ET Q
q 0.000 g BT 70.87 213.85 Td (internes ou natives.) Tj ET Q
q 0.000 g BT 70.87 199.68 Td ( ) Tj ET Q
q 0.000 g BT 70.87 185.50 Td (La fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 122.57 185.50 Td (help) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 143.13 185.50 Td ( peut aussi être utilisée pour les fonctions utilisateur.) Tj ET Q
q 0.000 g BT 70.87 171.33 Td ( ) Tj ET Q
q 0.000 g BT 70.87 157.16 Td (La documentation qui serait affichée concernant une fonction provient de la définition de  celle-ci.) Tj ET Q
q 0.000 g BT 70.87 142.98 Td ( ) Tj ET Q
q 0.000 g BT 70.87 128.81 Td (Vous pouvez aussi rechercher de l'aide sur des fonctions en indiquant une partie de leurs noms.) Tj ET Q
q 0.000 g BT 70.87 114.64 Td ( ) Tj ET Q
q 0.000 g BT 70.87 100.46 Td (Par exemple, dans la console, vous pouvez taper :) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 501.28 45.79 Td (Page 23/25) Tj ET Q

endstream
endobj
49 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 50 0 R>>
endobj
50 0 obj
<</Length 4271>>
stream
2 J
0.85 w
BT /F1 10.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
q 0.000 g BT 70.87 794.95 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 781.38 Td ( Help "path") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 767.21 Td ( Found these words:) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 753.03 Td (      clean-path     \(function\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 738.86 Td (      lit-path!      \(datatype\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 724.69 Td (      lit-path?      \(action\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 710.51 Td (      path!          \(datatype\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 696.34 Td (      path-thru      \(function\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 682.17 Td (      path?          \(action\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 667.99 Td (      set-path!      \(datatype\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 653.82 Td (      set-path?      \(action\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 639.65 Td (      split-path     \(function\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 625.47 Td (      to-lit-path    \(function\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 611.30 Td (      to-path        \(function\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 597.13 Td (      to-set-path    \(function\)) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 582.35 Td ( ) Tj ET Q
q 0.000 g BT 70.87 568.18 Td (pour afficher tous les mots qui contiennent la chaîne "path".) Tj ET Q
q 0.000 g BT 70.87 554.01 Td ( ) Tj ET Q
q 0.000 g BT 70.87 539.83 Td (Pour voir une liste de toutes les fonctions valables dans REBOL, tapez ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 386.58 539.83 Td (what) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 409.36 539.83 Td (  dans la console :) Tj ET Q
q 0.000 g BT 70.87 525.66 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 512.09 Td ( what) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 497.92 Td ( * [value1 value2]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 483.74 Td ( ** [number exponent]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 469.57 Td ( + [value1 value2]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 455.40 Td ( - [value1 value2]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 441.22 Td ( / [value1 value2]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 427.05 Td ( // [value1 value2]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 412.88 Td ( &lt; [value1 value2]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 398.70 Td ( &lt;= [value1 value2]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 384.53 Td ( &lt;&gt; [value1 value2]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 370.36 Td ( = [value1 value2]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 356.18 Td ( == [value1 value2]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 342.01 Td ( =? [value1 value2]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 327.84 Td ( &gt; [value1 value2]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 313.66 Td ( &gt;= [value1 value2]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 299.49 Td ( ? ['word]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 285.32 Td ( ?? ['name]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 271.14 Td ( about []) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 256.97 Td ( abs [value]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 242.80 Td ( absolute [value]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 228.62 Td ( ...) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 213.85 Td (  ) Tj ET Q
BT /F5 14.00 Tf ET
q 0.000 g BT 70.87 170.13 Td (Afficher le code source) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 157.16 Td (  ) Tj ET Q
q 0.000 g BT 70.87 142.98 Td (Une autre technique pour apprendre REBOL et pour gagner du temps dans l'écriture de vos propres ) Tj ET Q
q 0.000 g BT 70.87 128.81 Td (fonctions, est de regarder comment sont définies les fonctions mezzanine de REBOL.) Tj ET Q
q 0.000 g BT 70.87 114.64 Td ( ) Tj ET Q
q 0.000 g BT 70.87 100.46 Td (Vous pouvez utiliser la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 211.49 100.46 Td (source) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 244.28 100.46 Td ( pour cela :) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 501.28 45.79 Td (Page 24/25) Tj ET Q

endstream
endobj
51 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [70.87 52.19 197.14 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 52 0 R>>
endobj
52 0 obj
<</Length 2977>>
stream
2 J
0.85 w
BT /F1 10.00 Tf ET
0.902 0.902 0.902 rg
0.85 w
56.69 805.04 m 538.59 805.04 l S
q 0.502 g BT 70.87 819.05 Td (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions ) Tj ET Q
q 0.000 g BT 70.87 794.95 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 781.38 Td ( source source) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 767.21 Td ( source: func [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 753.03 Td (     "Prints the source code for a word.") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 738.86 Td (     'word [word!]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 724.69 Td ( ][) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 710.51 Td (     prin join word ": ") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 696.34 Td (     if not value? word [print "undefined" exit]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 682.17 Td (     either any [native? get word op? get word action? get word] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 667.99 Td (         print ["native" mold third get word]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 653.82 Td (     ] [print mold get word]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 639.65 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 624.87 Td ( ) Tj ET Q
q 0.000 g BT 70.87 610.70 Td (Ci-dessus le propre code de la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 247.06 610.70 Td (source) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 279.85 610.70 Td (.) Tj ET Q
q 0.000 g BT 70.87 596.53 Td ( ) Tj ET Q
q 0.000 g BT 70.87 582.35 Td (Notez que vous ne pourrez voir le code source des fonctions natives car elles existent seulement dans) Tj ET Q
q 0.000 g BT 70.87 568.18 Td (le  code du binaire.  Cependant, la fonction ) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 263.76 568.18 Td (source) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 296.55 568.18 Td ( affichera la spécification d'interface de la fonction) Tj ET Q
q 0.000 g BT 70.87 554.01 Td (native.) Tj ET Q
q 0.000 g BT 70.87 539.83 Td ( ) Tj ET Q
q 0.000 g BT 70.87 525.66 Td (Par exemple :) Tj ET Q
q 0.000 g BT 70.87 511.49 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 70.87 497.92 Td ( source add) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 483.74 Td ( add: native [) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 469.57 Td (     "Returns the result of adding two values.") Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 455.40 Td (     value1 [number! pair! char! money! date! time! tuple!]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 441.22 Td (     value2 [number! pair! char! money! date! time! tuple!]) Tj ET Q
q 1.000 0.000 0.000 rg BT 70.87 427.05 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 70.87 412.28 Td ( ) Tj ET Q
q 0.000 g BT 70.87 398.10 Td (Updated 21-Jan-2005 - Copyright REBOL Technologies - Formatted with MakeDoc2 Translation by) Tj ET Q
q 0.000 g BT 70.87 383.93 Td (Philippe Le Goff) Tj ET Q
BT /F6 8.00 Tf ET
0.85 w
56.69 56.69 m 538.59 56.69 l S
q 0.000 g BT 70.87 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 501.28 45.79 Td (Page 25/25) Tj ET Q

endstream
endobj
1 0 obj
<</Type /Pages
/Kids [3 0 R 5 0 R 7 0 R 9 0 R 11 0 R 13 0 R 15 0 R 17 0 R 19 0 R 21 0 R 23 0 R 25 0 R 27 0 R 29 0 R 31 0 R 33 0 R 35 0 R 37 0 R 39 0 R 41 0 R 43 0 R 45 0 R 47 0 R 49 0 R 51 0 R ]
/Count 25
/MediaBox [0 0 595.28 841.89]
>>
endobj
53 0 obj
<</Type /Font
/BaseFont /Helvetica
/Subtype /Type1
/Encoding /WinAnsiEncoding
>>
endobj
54 0 obj
<</Type /Font
/BaseFont /Courier
/Subtype /Type1
/Encoding /WinAnsiEncoding
>>
endobj
55 0 obj
<</Type /Font
/BaseFont /Times-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
>>
endobj
56 0 obj
<</Type /Font
/BaseFont /Times-Roman
/Subtype /Type1
/Encoding /WinAnsiEncoding
>>
endobj
57 0 obj
<</Type /Font
/BaseFont /Helvetica-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
>>
endobj
58 0 obj
<</Type /Font
/BaseFont /Helvetica-Oblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
>>
endobj
2 0 obj
<<
/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]
/Font <<
/F1 53 0 R
/F2 54 0 R
/F3 55 0 R
/F4 56 0 R
/F5 57 0 R
/F6 58 0 R
>>
/XObject <<
>>
>>
endobj
59 0 obj
<<
/Producer (FPDF 1.53)
/Title (Manuel de l'utilisateur - Chapitre 9 - Les Fonctions )
/Subject (Manuels)
/Author (Philippe Le Goff )
/Keywords (DOCUMENTATION, fonction, argument, raffinements)
/Creator (The REBOL Documentation Project)
/CreationDate (D:20060108125235)
>>
endobj
60 0 obj
<<
/Type /Catalog
/Pages 1 0 R
/OpenAction [3 0 R /FitH null]
/PageLayout /OneColumn
>>
endobj
xref
0 61
0000000000 65535 f 
0000131837 00000 n 
0000132686 00000 n 
0000000009 00000 n 
0000000222 00000 n 
0000001867 00000 n 
0000002080 00000 n 
0000008115 00000 n 
0000008328 00000 n 
0000014670 00000 n 
0000014884 00000 n 
0000020088 00000 n 
0000020303 00000 n 
0000025596 00000 n 
0000025811 00000 n 
0000031164 00000 n 
0000031379 00000 n 
0000036352 00000 n 
0000036567 00000 n 
0000042370 00000 n 
0000042585 00000 n 
0000047937 00000 n 
0000048152 00000 n 
0000053055 00000 n 
0000053270 00000 n 
0000058377 00000 n 
0000058592 00000 n 
0000064198 00000 n 
0000064413 00000 n 
0000070339 00000 n 
0000070554 00000 n 
0000075843 00000 n 
0000076058 00000 n 
0000080664 00000 n 
0000080879 00000 n 
0000085268 00000 n 
0000085483 00000 n 
0000090316 00000 n 
0000090531 00000 n 
0000095244 00000 n 
0000095459 00000 n 
0000100753 00000 n 
0000100968 00000 n 
0000107786 00000 n 
0000108001 00000 n 
0000113504 00000 n 
0000113719 00000 n 
0000118680 00000 n 
0000118895 00000 n 
0000124057 00000 n 
0000124272 00000 n 
0000128594 00000 n 
0000128809 00000 n 
0000132090 00000 n 
0000132187 00000 n 
0000132282 00000 n 
0000132380 00000 n 
0000132479 00000 n 
0000132581 00000 n 
0000132846 00000 n 
0000133136 00000 n 
trailer
<<
/Size 61
/Root 60 0 R
/Info 59 0 R
>>
startxref
133240
%%EOF
