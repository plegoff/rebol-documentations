%PDF-1.3
3 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [73.70 52.19 199.97 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 4 0 R>>
endobj
4 0 obj
<</Length 2040>>
stream
2 J
0.57 w
0.85 w
56.69 805.04 m 538.59 805.04 l S
BT /F1 10.00 Tf ET
q 0.502 g BT 73.70 819.05 Td (Programmation Pragmatique : REBOL et eXtreme Programming - Extrait) Tj ET Q
0.57 w
BT /F2 26.00 Tf ET
q 0.502 g BT 118.24 656.92 Td (The REBOL Documentation) Tj ET Q
q 0.502 g BT 243.04 631.41 Td (Project) Tj ET Q
BT /F1 8.00 Tf ET
q 0.502 g BT 224.74 616.97 Td (-- FR - Documentation REBOL - Divers --) Tj ET Q
0.85 w
BT /F2 20.00 Tf ET
q 0.502 g BT 73.70 423.45 Td (Divers) Tj ET Q
BT /F3 22.00 Tf ET
297.64 436.54 m 297.64 413.86 l S q 0.000 g BT 300.47 418.60 Td (Programmation) Tj ET Q
297.64 413.86 m 297.64 391.18 l S q 0.000 g BT 300.47 395.92 Td (Pragmatique : REBOL) Tj ET Q
297.64 391.18 m 297.64 368.50 l S q 0.000 g BT 300.47 373.24 Td (et eXtreme) Tj ET Q
297.64 368.50 m 297.64 345.83 l S q 0.000 g BT 300.47 350.57 Td (Programming - Extrait) Tj ET Q
297.64 345.83 m 297.64 323.15 l S 
BT /F4 16.00 Tf ET
297.64 323.15 m 297.64 306.14 l S q 0.000 g BT 451.35 309.85 Td (REBOLtof) Tj ET Q
BT /F4 12.00 Tf ET
297.64 306.14 m 297.64 289.13 l S q 0.000 g BT 311.59 294.04 Td (Première publication : 24 mars 2006, et mis) Tj ET Q
297.64 289.13 m 297.64 272.13 l S q 0.000 g BT 355.27 277.03 Td (en ligne le  vendredi 24 mars 2006) Tj ET Q
BT /F5 10.00 Tf ET
q 0.000 g BT 73.70 253.54 Td (Résumé :) Tj ET 73.70 252.54 45.01 -0.50 re f Q
BT /F4 8.00 Tf ET
q 0.000 g BT 73.70 225.79 Td ( J'ai le plaisir de vous présenter ici un extrait d'un ouvrage en cours de rédaction. Il s'agit d'études de cas pratiques d'application de la) Tj ET Q
q 0.000 g BT 73.70 211.62 Td (méthodologie d'ingénierie logicielle "eXtreme Programming" à la programmation avec REBOL.) Tj ET Q
q 0.000 g BT 73.70 197.44 Td ( ) Tj ET Q
q 0.000 g BT 73.70 183.27 Td (L'extrait présenté porte sur le deuxième jour de développement d'une application de gestion d'une vidéothèque.) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 73.70 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 503.51 45.79 Td (Page 1/11) Tj ET Q

endstream
endobj
5 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [73.70 52.19 199.97 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 6 0 R>>
endobj
6 0 obj
<</Length 5436>>
stream
2 J
0.85 w
BT /F4 8.00 Tf ET
0.85 w
56.69 805.04 m 538.59 805.04 l S
BT /F1 10.00 Tf ET
q 0.502 g BT 73.70 819.05 Td (Programmation Pragmatique : REBOL et eXtreme Programming - Extrait) Tj ET Q
BT /F4 8.00 Tf ET
BT /F5 10.00 Tf ET
q 0.000 g BT 73.70 780.78 Td ( Parcourant d'anciens numéros de la revue en ligne anglophone "IEEE Software", mon) Tj ET Q
q 0.000 g BT 73.70 766.61 Td (attention est retenue par un article datant de quelques années, où il est question de la) Tj ET Q
q 0.000 g BT 73.70 752.43 Td ("compréhension de la sociologie de projets par la modélisation des acteurs" [Alexander]. Les) Tj ET Q
q 0.000 g BT 73.70 738.26 Td (auteurs décrivent les réactions de développeurs à l'égard de leurs clients. Une des -) Tj ET Q
q 0.000 g BT 73.70 724.09 Td (remarquables - réponses était "ils ne disposent pas des compétences nécessaires afin de) Tj ET Q
q 0.000 g BT 73.70 709.91 Td (participer à l'établissement des objectifs et des contraintes. Ils décrivent des solutions plutôt) Tj ET Q
q 0.000 g BT 73.70 695.74 Td (que des spécifications techniques, et ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 253.76 695.74 Td (ils changent d'avis) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 335.15 695.74 Td (.") Tj ET Q
q 0.000 g BT 73.70 681.57 Td ( ) Tj ET Q
q 0.000 g BT 73.70 667.39 Td (Ce cas illustre une situation tellement présente dans le monde du développement logiciel : celle du) Tj ET Q
q 0.000 g BT 73.70 653.22 Td (développeur frustré par l'attitude du client. Et pourtant, dans le monde réel, le client est intéressé par) Tj ET Q
q 0.000 g BT 73.70 639.05 Td (des solutions à son problème, pas par des spécifications abstraites et centrées sur le développeur.) Tj ET Q
q 0.000 g BT 73.70 624.87 Td (Et le client a le droit de pouvoir changer d'avis. Et peut-être n'avait-il pas bien saisi le problème. Ou) Tj ET Q
q 0.000 g BT 73.70 610.70 Td (les conditions qui avaient mené à sa décision ont changé...) Tj ET Q
q 0.000 g BT 73.70 596.53 Td ( ) Tj ET Q
q 0.000 g BT 73.70 582.35 Td (Tout développeur un peu expérimenté dans ce domaine a un jour été confronté à ce type de) Tj ET Q
q 0.000 g BT 73.70 568.18 Td (scenario...) Tj ET Q
q 0.000 g BT 73.70 554.01 Td (  ) Tj ET Q
q 0.000 g BT 79.26 554.01 Td (  ) Tj ET Q
q 0.000 g BT 73.70 539.83 Td (N'hésitez pas à nous faire part de votre avis en utilisant le formulaire en-dessous de l'article) Tj ET Q
q 0.000 g BT 73.70 525.66 Td (  ) Tj ET Q
BT /F5 14.00 Tf ET
q 0.000 g BT 73.70 447.93 Td (Jour 2) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 434.95 Td (  ) Tj ET Q
q 0.000 g BT 73.70 420.78 Td (Toute l'équipe est réunie. Je rappelle les règles du jeu. Tous les jours à 10 heures, nous) Tj ET Q
q 0.000 g BT 73.70 406.61 Td (commençons par une réunion de coordination \(appelée "Stand-up meeting" dans le jargon XP\). Tous) Tj ET Q
q 0.000 g BT 73.70 392.43 Td (les emails et les téléphones doivent donc être traités avant cette heure. Chaque membre l'équipe) Tj ET Q
q 0.000 g BT 73.70 378.26 Td (décrit brièvement le travail effectué le jour précédent et celui planifié pour le reste de la journée.) Tj ET Q
q 0.000 g BT 73.70 364.09 Td (Différents petits problèmes techniques peuvent y être discutés, ainsi que toute information) Tj ET Q
q 0.000 g BT 73.70 349.91 Td (intéressant l'équipe. Cela aide chacun des développeurs à cadrer son travail dans celui du groupe, et) Tj ET Q
q 0.000 g BT 73.70 335.74 Td (chacun à l'occasion d'aider les autres. Le Stand-up meeting sert également de point de départ pour) Tj ET Q
q 0.000 g BT 73.70 321.57 Td (la journée de travail. Les paires de programmeurs se forment, et de nouvelles tâches sont choisies) Tj ET Q
q 0.000 g BT 73.70 307.39 Td (par les binômes...) Tj ET Q
q 0.000 g BT 73.70 293.22 Td ( ) Tj ET Q
q 0.000 g BT 73.70 279.05 Td (Je rappelle à l'équipe que nous utilisons un autocollant vert sur une tâche quand elle est complète, et) Tj ET Q
q 0.000 g BT 73.70 264.87 Td (qu'un autocollant vert sur une story signifie que toutes ses tâches sont complètes. Sinon, il faut) Tj ET Q
q 0.000 g BT 73.70 250.70 Td (employer du rouge pour la tâche et sa story. Toutes les cartes, sauf les cartes de tâches utilisées par) Tj ET Q
q 0.000 g BT 73.70 236.53 Td (les binômes, sont affichées sur nos tableaux métalliques blanc qui occupent tout un pan de mur.) Tj ET Q
q 0.000 g BT 73.70 222.35 Td (Ainsi tout le monde, même le client, peut facilement suivre l'état d'avancement du projet.) Tj ET Q
q 0.000 g BT 73.70 208.18 Td ( ) Tj ET Q
q 0.000 g BT 73.70 194.01 Td (- Pas de questions pour le moment ? Non ? Alors, choisissez votre partenaire... Nous n'avons pas) Tj ET Q
q 0.000 g BT 73.70 179.83 Td (encore eu de contact avec le client, donc nous n'avons pas de détail sur les priorités des stories...) Tj ET Q
q 0.000 g BT 73.70 165.66 Td (Alors, lisez ce document de specs que nous avons reçu, et tentez quelques "spikes" de code pour) Tj ET Q
q 0.000 g BT 73.70 151.49 Td (fixer les idées.) Tj ET Q
q 0.000 g BT 73.70 137.32 Td ( ) Tj ET Q
q 0.000 g BT 73.70 123.14 Td (Les "spikes" sont des essais libres de petits bouts de code, destinés à vérifier la faisabilité d'une) Tj ET Q
q 0.000 g BT 73.70 108.97 Td (solution technique avant son intégration dans le code en développement.) Tj ET Q
q 0.000 g BT 73.70 94.80 Td ( ) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 73.70 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 503.51 45.79 Td (Page 2/11) Tj ET Q

endstream
endobj
7 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [73.70 52.19 199.97 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 8 0 R>>
endobj
8 0 obj
<</Length 4861>>
stream
2 J
0.85 w
BT /F1 10.00 Tf ET
0.85 w
56.69 805.04 m 538.59 805.04 l S
q 0.502 g BT 73.70 819.05 Td (Programmation Pragmatique : REBOL et eXtreme Programming - Extrait) Tj ET Q
q 0.000 g BT 73.70 794.95 Td (Benoît fait un signe de main à Fabrice. Julie sourit à Martin... C'est parti.) Tj ET Q
q 0.000 g BT 73.70 780.78 Td ( ) Tj ET Q
q 0.000 g BT 73.70 766.61 Td (- Quand auront-nous un contact avec le client ? s'inquiète Julie.) Tj ET Q
q 0.000 g BT 73.70 752.43 Td ( ) Tj ET Q
q 0.000 g BT 73.70 738.26 Td (- Je dois encore aller aux nouvelles... J'y vais d'ailleurs de ce pas ! répond-je) Tj ET Q
q 0.000 g BT 73.70 724.09 Td ( ) Tj ET Q
q 0.000 g BT 73.70 709.91 Td (Je me dirige vers le bureau de Bertrand, qui s'occupe des premiers contacts et de l'administration) Tj ET Q
q 0.000 g BT 73.70 695.74 Td (avec le client.) Tj ET Q
q 0.000 g BT 73.70 681.57 Td ( ) Tj ET Q
q 0.000 g BT 73.70 667.39 Td (- Bertrand, qu'en est-il avec le client de Video4all ? Je n'arrive pas à le contacter...) Tj ET Q
q 0.000 g BT 73.70 653.22 Td ( ) Tj ET Q
q 0.000 g BT 73.70 639.05 Td (- Euh... Oui... J'ai eu quelques conversations avec lui. Je peux dire qu'il a été fort déçu par la) Tj ET Q
q 0.000 g BT 73.70 624.87 Td (première firme à qui il avait d'abord confié le travail. Il se méfie maintenant, et depuis qu'il nous a) Tj ET Q
q 0.000 g BT 73.70 610.70 Td (livré les spécifications et signé le contrat, il ne nous a plus contacté.) Tj ET Q
q 0.000 g BT 73.70 596.53 Td ( ) Tj ET Q
q 0.000 g BT 73.70 582.35 Td (- Bon, je vais continuer avec les éléments que j'ai. J'essayerai encore de le contacter.) Tj ET Q
q 0.000 g BT 73.70 568.18 Td ( ) Tj ET Q
q 0.000 g BT 73.70 554.01 Td (De retour dans notre espace de travail, Fabrice me signale que Benoît a dû s'absenter d'urgence,) Tj ET Q
q 0.000 g BT 73.70 539.83 Td (pour régler un problème avec un autre projet. Pas de problème. Je me mets en binôme avec lui. Je) Tj ET Q
q 0.000 g BT 73.70 525.66 Td (vais en profiter pour lui rappeler notre utilisation du framework de tests unitaires.) Tj ET Q
q 0.000 g BT 73.70 511.49 Td ( ) Tj ET Q
q 0.000 g BT 73.70 497.32 Td (- Vois-tu Fabrice, XP part du principe "les tests en premier". Pour cela, on écrit d'abord le test) Tj ET Q
q 0.000 g BT 73.70 483.14 Td (unitaire destiner à contrôler une fonctionnalité, et ensuite, le code nécessaire pour faire passer le) Tj ET Q
q 0.000 g BT 73.70 468.97 Td (test.) Tj ET Q
q 0.000 g BT 73.70 454.80 Td ( ) Tj ET Q
q 0.000 g BT 73.70 440.62 Td (- Comment écrire le test si je ne connais pas la fonctionnalité ? Je vais écrire n'importe quoi alors ?) Tj ET Q
q 0.000 g BT 73.70 426.45 Td ( ) Tj ET Q
q 0.000 g BT 73.70 412.28 Td (- Justement : tu connais la fonctionnalité, ou au moins, tu connais les résultats attendus. Donc tu) Tj ET Q
q 0.000 g BT 73.70 398.10 Td (peux écrire le test ! Regarde, je vais prendre un exemple simple. Imaginons que tu doives) Tj ET Q
q 0.000 g BT 73.70 383.93 Td (implémenter la fonctionnalité de "rajouter 1 au nombre passé en argument". Tu sais à ce stade-ci) Tj ET Q
q 0.000 g BT 73.70 369.76 Td (que si tu passes "1" à la fonction, elle te retourne ...) Tj ET Q
q 0.000 g BT 73.70 355.58 Td ( ) Tj ET Q
q 0.000 g BT 73.70 341.41 Td (- "2" bien sûr !) Tj ET Q
q 0.000 g BT 73.70 327.24 Td ( ) Tj ET Q
q 0.000 g BT 73.70 313.06 Td (- Exactement. Et si tu passes "10" ?) Tj ET Q
q 0.000 g BT 73.70 298.89 Td ( ) Tj ET Q
q 0.000 g BT 73.70 284.72 Td (- "11"...) Tj ET Q
q 0.000 g BT 73.70 270.54 Td ( ) Tj ET Q
q 0.000 g BT 73.70 256.37 Td (- Voilà. Tu disposes de suffisamment d'éléments pour écrire tes premiers tests ! Vérifions que nous) Tj ET Q
q 0.000 g BT 73.70 242.20 Td (avons les utilitaires nécessaires sur la machine.) Tj ET Q
q 0.000 g BT 73.70 228.02 Td ( ) Tj ET Q
q 0.000 g BT 73.70 213.85 Td (Je contrôle sur le PC la présence d'un éditeur de texte, et de l'évaluateur de REBOL, et du) Tj ET Q
q 0.000 g BT 73.70 199.68 Td (framework de test "RUn.r". Je lance l'éditeur, crée un nouveau fichier, que je sauve sous le nom) Tj ET Q
q 0.000 g BT 73.70 185.50 Td ("spike-ajoute.test". Nous avons pris la bonne habitude de faire figurer le mot "spike" dans le nom de) Tj ET Q
q 0.000 g BT 73.70 171.33 Td (tous les fichiers différents de ceux contenant le code de production, ce qui nous évite les erreurs) Tj ET Q
q 0.000 g BT 73.70 157.16 Td (quand nous "nettoyons" nos répertoires. Je tape le code suivant :) Tj ET Q
q 0.000 g BT 73.70 142.98 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 129.41 Td ( test-ajoute-1: does []) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 114.64 Td ( ) Tj ET Q
q 0.000 g BT 73.70 100.46 Td (qui constituera l'ossature de notre premier test.) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 73.70 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 503.51 45.79 Td (Page 3/11) Tj ET Q

endstream
endobj
9 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [73.70 52.19 199.97 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 10 0 R>>
endobj
10 0 obj
<</Length 4166>>
stream
2 J
0.85 w
BT /F1 10.00 Tf ET
0.85 w
56.69 805.04 m 538.59 805.04 l S
q 0.502 g BT 73.70 819.05 Td (Programmation Pragmatique : REBOL et eXtreme Programming - Extrait) Tj ET Q
q 0.000 g BT 73.70 794.95 Td ( ) Tj ET Q
q 0.000 g BT 73.70 780.78 Td (Je crée un second fichier, qui sera destiné au script contenant les fonctionnalités à tester. Je le) Tj ET Q
q 0.000 g BT 73.70 766.61 Td (sauve sous le nom de "spike-ajoute.r". Je me contente d'un rajouter un en-tête REBOL :) Tj ET Q
q 0.000 g BT 73.70 752.43 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 738.86 Td ( rebol []) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 724.09 Td ( ) Tj ET Q
q 0.000 g BT 73.70 709.91 Td (Revenant à mon fichier de test, je place en début de fichier le chargement de mon script :) Tj ET Q
q 0.000 g BT 73.70 695.74 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 682.17 Td ( do %spike-ajoute.r) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 667.39 Td ( ) Tj ET Q
q 0.000 g BT 73.70 653.22 Td (Et dans mon premier test, je place un appel à la fonction à créer :) Tj ET Q
q 0.000 g BT 73.70 639.05 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 625.47 Td ( test-ajoute-1: does [assert-equal ajoute 1 2]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 610.70 Td ( ) Tj ET Q
q 0.000 g BT 73.70 596.53 Td (- Voilà Fabrice. C'est ainsi que l'on crée son premier test. Maintenant, j'ai écrit littéralement :) Tj ET Q
q 0.000 g BT 73.70 582.35 Td ("j'affirme qu'en passant 1 comme argument à la fonction 'ajoute, la réponse sera 2".) Tj ET Q
q 0.000 g BT 73.70 568.18 Td ( ) Tj ET Q
q 0.000 g BT 73.70 554.01 Td (- Je vois...) Tj ET Q
q 0.000 g BT 73.70 539.83 Td ( ) Tj ET Q
q 0.000 g BT 73.70 525.66 Td (- Lançons maintenant notre test...) Tj ET Q
q 0.000 g BT 73.70 511.49 Td ( ) Tj ET Q
q 0.000 g BT 73.70 497.32 Td (J'ouvre la console REBOL, et j'y charge le script de RUn :) Tj ET Q
q 0.000 g BT 73.70 483.14 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 469.57 Td ( >> do %RUn.r) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 455.40 Td ( Script: "\(R\)EBOL \(Un\)it" \(none\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 441.22 Td ( >>) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 426.45 Td ( ) Tj ET Q
q 0.000 g BT 73.70 412.28 Td (Puis je lance mon test :) Tj ET Q
q 0.000 g BT 73.70 398.10 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 384.53 Td ( >> run-test %spike-ajoute.test) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 369.76 Td ( ) Tj ET Q
q 0.000 g BT 73.70 355.58 Td (La réponse est immédiate :) Tj ET Q
q 0.000 g BT 73.70 341.41 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 327.84 Td ( ==================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 313.66 Td ( = \(R\)EBOL-\(Un\)it =) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 299.49 Td ( = Test Framework =) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 285.32 Td ( ==================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 271.14 Td ( == OUTPUT ===============================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 256.97 Td ( > spike-ajoute.test) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 242.80 Td ( >> SETUP) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 228.62 Td ( Script: "Untitled" \(none\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 214.45 Td (     --> Done) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 200.28 Td ( >> test-ajoute-1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 186.10 Td (     !-> ERROR generated:) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 171.93 Td (         Script Error: ajoute has no value) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 157.76 Td (         Near : assert-equal ajoute 1 2) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 143.58 Td (         Where: test-ajoute-1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 129.41 Td ( == TEST REPORT ==========================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 115.24 Td ( TOTAL : 1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 101.06 Td (    => Passed   : 0) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 73.70 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 503.51 45.79 Td (Page 4/11) Tj ET Q

endstream
endobj
11 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [73.70 52.19 199.97 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 12 0 R>>
endobj
12 0 obj
<</Length 4505>>
stream
2 J
0.85 w
BT /F2 8.00 Tf ET
0.85 w
56.69 805.04 m 538.59 805.04 l S
BT /F1 10.00 Tf ET
q 0.502 g BT 73.70 819.05 Td (Programmation Pragmatique : REBOL et eXtreme Programming - Extrait) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 795.55 Td (    => Failures : 0) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 781.38 Td (    => Errors   : 1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 767.21 Td ( =========================================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 753.03 Td ( End of test) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 738.86 Td ( Press [ENTER] to Quit) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 724.09 Td ( ) Tj ET Q
q 0.000 g BT 73.70 709.91 Td (La réaction de Fabrice n'est pas moins rapide :) Tj ET Q
q 0.000 g BT 73.70 695.74 Td ( ) Tj ET Q
q 0.000 g BT 73.70 681.57 Td (- Hé mais ça ne marche pas ton truc !) Tj ET Q
q 0.000 g BT 73.70 667.39 Td ( ) Tj ET Q
q 0.000 g BT 73.70 653.22 Td (- L'erreur que tu vois prouve justement que mon "truc" fonctionne, lui répond-je en souriant devant sa) Tj ET Q
q 0.000 g BT 73.70 639.05 Td (réaction attendue. RUn me signale simplement que la fonction 'ajoute est inconnue. Ce qui est) Tj ET Q
q 0.000 g BT 73.70 624.87 Td (normal, puisque nous ne l'avons pas encore définie dans notre script.) Tj ET Q
q 0.000 g BT 73.70 610.70 Td ( ) Tj ET Q
q 0.000 g BT 73.70 596.53 Td (- Ah... Alors il fallait d'abord la définir avant de lancer le test, non ?) Tj ET Q
q 0.000 g BT 73.70 582.35 Td ( ) Tj ET Q
q 0.000 g BT 73.70 568.18 Td (- Et non... Car de cette manière nous pouvons une première fois vérifier le bon fonctionnement du) Tj ET Q
q 0.000 g BT 73.70 554.01 Td (framework de test dans notre contexte d'utilisation.) Tj ET Q
q 0.000 g BT 73.70 539.83 Td ( ) Tj ET Q
q 0.000 g BT 73.70 525.66 Td (- Hu ... ?) Tj ET Q
q 0.000 g BT 73.70 511.49 Td ( ) Tj ET Q
q 0.000 g BT 73.70 497.32 Td (- Oui : maintenant, une erreur s'est déclenchée. Ce qui est le comportement attendu, puisque nous) Tj ET Q
q 0.000 g BT 73.70 483.14 Td (n'avons pas encore définit la fonction. Imaginons maintenant que cette erreur ne se soit pas) Tj ET Q
q 0.000 g BT 73.70 468.97 Td (déclenchée... Quelle conclusion pouvons nous alors tirer sur la qualité de nos tests et donc de notre) Tj ET Q
q 0.000 g BT 73.70 454.80 Td (code ? Nous n'aurions aucune certitude...) Tj ET Q
q 0.000 g BT 73.70 440.62 Td ( ) Tj ET Q
q 0.000 g BT 73.70 426.45 Td (- Okay. Mais dans quel cas cette erreur pourrait-elle ne pas se déclencher ?) Tj ET Q
q 0.000 g BT 73.70 412.28 Td ( ) Tj ET Q
q 0.000 g BT 73.70 398.10 Td (- Il m'est par exemple déjà arrivé de créer une fonction et de la nommer identiquement qu'une autre) Tj ET Q
q 0.000 g BT 73.70 383.93 Td (fonction créée précédemment. Lors du test, je n'ai pas eu d'erreur, mais un test qui ne passait pas.) Tj ET Q
q 0.000 g BT 73.70 369.76 Td (Cela m'a permis d'éviter d'emblée un bug particulièrement vicieux : deux fonctions aux noms) Tj ET Q
q 0.000 g BT 73.70 355.58 Td (identiques...) Tj ET Q
q 0.000 g BT 73.70 341.41 Td ( ) Tj ET Q
q 0.000 g BT 73.70 327.24 Td (- Compris !) Tj ET Q
q 0.000 g BT 73.70 313.06 Td ( ) Tj ET Q
q 0.000 g BT 73.70 298.89 Td (- Bon continuons...) Tj ET Q
q 0.000 g BT 73.70 284.72 Td ( ) Tj ET Q
q 0.000 g BT 73.70 270.54 Td (J'implémente à présent le squelette le la fonction 'ajoute dans mon script, qui devient :) Tj ET Q
q 0.000 g BT 73.70 256.37 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 242.80 Td ( rebol []) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 228.62 Td ( ajoute: func [nombre] [true]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 213.85 Td ( ) Tj ET Q
q 0.000 g BT 73.70 199.68 Td (Et je montre à Fabrice :) Tj ET Q
q 0.000 g BT 73.70 185.50 Td ( ) Tj ET Q
q 0.000 g BT 73.70 171.33 Td (- Pour la même raison que précédemment, je n'implémente pas encore la fonctionnalité. Je vais) Tj ET Q
q 0.000 g BT 73.70 157.16 Td (simplement tester si mon framework de test peut accéder à la définition de la fonction. Comme un) Tj ET Q
q 0.000 g BT 73.70 142.98 Td (résultat est attendu, je me contente de placer un 'true dans le corps de la fonction. Comment) Tj ET Q
q 0.000 g BT 73.70 128.81 Td (penses-tu que RUn va réagir ?) Tj ET Q
q 0.000 g BT 73.70 114.64 Td ( ) Tj ET Q
q 0.000 g BT 73.70 100.46 Td (- Je suppose... Un test qui ne passe pas ?) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 73.70 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 503.51 45.79 Td (Page 5/11) Tj ET Q

endstream
endobj
13 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [73.70 52.19 199.97 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 14 0 R>>
endobj
14 0 obj
<</Length 4278>>
stream
2 J
0.85 w
BT /F1 10.00 Tf ET
0.85 w
56.69 805.04 m 538.59 805.04 l S
q 0.502 g BT 73.70 819.05 Td (Programmation Pragmatique : REBOL et eXtreme Programming - Extrait) Tj ET Q
q 0.000 g BT 73.70 794.95 Td ( ) Tj ET Q
q 0.000 g BT 73.70 780.78 Td (- Correct : regarde...) Tj ET Q
q 0.000 g BT 73.70 766.61 Td ( ) Tj ET Q
q 0.000 g BT 73.70 752.43 Td (Je repasse dans ma console. La touche "flèche vers le haut" me permet de remonter dans) Tj ET Q
q 0.000 g BT 73.70 738.26 Td (l'historique, et de retrouver ma dernière commande.) Tj ET Q
q 0.000 g BT 73.70 724.09 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 710.51 Td ( >> run-test %spike-ajoute.test) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 695.74 Td ( ) Tj ET Q
q 0.000 g BT 73.70 681.57 Td (Comme prévu, le test échoue :) Tj ET Q
q 0.000 g BT 73.70 667.39 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 653.82 Td ( ==================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 639.65 Td ( = \(R\)EBOL-\(Un\)it =) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 625.47 Td ( = Test Framework =) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 611.30 Td ( ==================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 597.13 Td ( == OUTPUT ===============================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 582.95 Td ( > spike-ajoute.test) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 568.78 Td ( >> SETUP) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 554.61 Td (     --> Done) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 540.43 Td ( >> test-ajoute-1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 526.26 Td (     *-> Data expected: 2 of type: [integer!]) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 512.09 Td (         but was : true of type: [logic!]) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 497.92 Td ( == TEST REPORT ==========================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 483.74 Td ( TOTAL : 1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 469.57 Td (    => Passed   : 0) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 455.40 Td (    => Failures : 1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 441.22 Td (    => Errors   : 0) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 427.05 Td ( =========================================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 412.88 Td ( End of test) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 398.70 Td ( Press [ENTER] to Quit) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 383.93 Td ( ) Tj ET Q
q 0.000 g BT 73.70 369.76 Td (- Maintenant que nous sommes certain que le framework de test fonctionne et est en mesure) Tj ET Q
q 0.000 g BT 73.70 355.58 Td (d'accéder à la fonction, nous avons déjà éliminé deux sources de biais potentielles ! Continuons) Tj ET Q
q 0.000 g BT 73.70 341.41 Td (notre travail... Nous allons maintenant implémenter la fonctionnalité minimum nécessaire afin de) Tj ET Q
q 0.000 g BT 73.70 327.24 Td (passer le test. Reprenons notre script et écrivons le corps de la fonction.) Tj ET Q
q 0.000 g BT 73.70 313.06 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 299.49 Td ( rebol []) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 285.32 Td ( ajoute: func [nombre] [nombre + 1]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 270.54 Td ( ) Tj ET Q
q 0.000 g BT 73.70 256.37 Td (- Et on repasse le test, dit Fabrice.) Tj ET Q
q 0.000 g BT 73.70 242.20 Td ( ) Tj ET Q
q 0.000 g BT 73.70 228.02 Td (- Exactement ! lui répond-je. Et je relance le test :) Tj ET Q
q 0.000 g BT 73.70 213.85 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 200.28 Td ( ==================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 186.10 Td ( = \(R\)EBOL-\(Un\)it =) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 171.93 Td ( = Test Framework =) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 157.76 Td ( ==================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 143.58 Td ( == OUTPUT ===============================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 129.41 Td ( > spike-ajoute-prerebol.test) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 115.24 Td ( >> SETUP) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 101.06 Td (     --> Done) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 73.70 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 503.51 45.79 Td (Page 6/11) Tj ET Q

endstream
endobj
15 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [73.70 52.19 199.97 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 16 0 R>>
endobj
16 0 obj
<</Length 4181>>
stream
2 J
0.85 w
BT /F2 8.00 Tf ET
0.85 w
56.69 805.04 m 538.59 805.04 l S
BT /F1 10.00 Tf ET
q 0.502 g BT 73.70 819.05 Td (Programmation Pragmatique : REBOL et eXtreme Programming - Extrait) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 795.55 Td ( >> test-ajoute-1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 781.38 Td (     --> Passed in ) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 767.21 Td ( == TEST REPORT ==========================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 753.03 Td ( TOTAL : 1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 738.86 Td (    => Passed   : 1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 724.69 Td (    => Failures : 0) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 710.51 Td (    => Errors   : 0) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 696.34 Td ( =========================================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 682.17 Td ( End of test) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 667.99 Td ( Press [ENTER] to Quit) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 653.22 Td ( ) Tj ET Q
q 0.000 g BT 73.70 639.05 Td (- Et voilà, s'exclame Fabrice. Travail terminé !) Tj ET Q
q 0.000 g BT 73.70 624.87 Td ( ) Tj ET Q
q 0.000 g BT 73.70 610.70 Td (Je le corrige :) Tj ET Q
q 0.000 g BT 73.70 596.53 Td ( ) Tj ET Q
q 0.000 g BT 73.70 582.35 Td (- Pas exactement terminé ! N'oublions pas le cycle du développement mené par les tests : créer le) Tj ET Q
q 0.000 g BT 73.70 568.18 Td (test, coder, tester, ... refactorer, retester, et continuer jusqu'à ce que le code donne satisfaction !) Tj ET Q
q 0.000 g BT 73.70 554.01 Td ( ) Tj ET Q
q 0.000 g BT 73.70 539.83 Td (- Le code est simple, il n'y a quand même rien à refactorer ?) Tj ET Q
q 0.000 g BT 73.70 525.66 Td ( ) Tj ET Q
q 0.000 g BT 73.70 511.49 Td (- Et si ! La documentation du code fait partie de la phase de refactoring ... Comme il est toujours) Tj ET Q
q 0.000 g BT 73.70 497.32 Td (possible d'involontairement changer le code lors de l'écriture des commentaires, il convient encore) Tj ET Q
q 0.000 g BT 73.70 483.14 Td (de retester le code. Rajoutons donc notre documentation, et une petite indentation des blocs :) Tj ET Q
q 0.000 g BT 73.70 468.97 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 455.40 Td ( rebol []) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 441.22 Td ( ) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 427.05 Td ( ajoute: func [) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 412.88 Td (     "ajoute un au nombre passé en argument") Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 398.70 Td (     nombre) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 384.53 Td ( ] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 370.36 Td (     nombre + 1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 356.18 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 341.41 Td ( ) Tj ET Q
q 0.000 g BT 73.70 327.24 Td (- Et retestons.) Tj ET Q
q 0.000 g BT 73.70 313.06 Td ( ) Tj ET Q
q 0.000 g BT 73.70 298.89 Td (Le test passe sans problème...) Tj ET Q
q 0.000 g BT 73.70 284.72 Td ( ) Tj ET Q
q 0.000 g BT 73.70 270.54 Td (- Que pouvons-nous encore améliorer dans notre fonction ?) Tj ET Q
q 0.000 g BT 73.70 256.37 Td ( ) Tj ET Q
q 0.000 g BT 73.70 242.20 Td (Fabrice réfléchit quelques instants et répond.) Tj ET Q
q 0.000 g BT 73.70 228.02 Td ( ) Tj ET Q
q 0.000 g BT 73.70 213.85 Td (- Que ce passerait-il si nous passions une string ! en argument ? Cela causerait une erreur ... Nous) Tj ET Q
q 0.000 g BT 73.70 199.68 Td (devrions préciser le type d'argument attendu !) Tj ET Q
q 0.000 g BT 73.70 185.50 Td ( ) Tj ET Q
q 0.000 g BT 73.70 171.33 Td (- Correct ! Vas-y, prend le volant ...) Tj ET Q
q 0.000 g BT 73.70 157.16 Td ( ) Tj ET Q
q 0.000 g BT 73.70 142.98 Td (- Le volant ?...) Tj ET Q
q 0.000 g BT 73.70 128.81 Td ( ) Tj ET Q
q 0.000 g BT 73.70 114.64 Td (- Oui, c'est un idiome propre à XP. On se représente souvent le binôme comme le conducteur - celui) Tj ET Q
q 0.000 g BT 73.70 100.46 Td (qui est derrière le clavier - et le navigateur - celui qui tient la carte.) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 73.70 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 503.51 45.79 Td (Page 7/11) Tj ET Q

endstream
endobj
17 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [73.70 52.19 199.97 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 18 0 R>>
endobj
18 0 obj
<</Length 3999>>
stream
2 J
0.85 w
BT /F1 10.00 Tf ET
0.85 w
56.69 805.04 m 538.59 805.04 l S
q 0.502 g BT 73.70 819.05 Td (Programmation Pragmatique : REBOL et eXtreme Programming - Extrait) Tj ET Q
q 0.000 g BT 73.70 794.95 Td ( ) Tj ET Q
q 0.000 g BT 73.70 780.78 Td (- Bon, je conduit, dit-il en souriant. Je limite donc le type d'argument valide aux integer !...) Tj ET Q
q 0.000 g BT 73.70 766.61 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 753.03 Td ( rebol []) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 738.86 Td ( ) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 724.69 Td ( ajoute: func [) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 710.51 Td (     "ajoute un au nombre passé en argument") Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 696.34 Td (     nombre [integer!]) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 682.17 Td ( ] [) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 667.99 Td (     nombre + 1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 653.82 Td ( ]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 639.05 Td ( ) Tj ET Q
q 0.000 g BT 73.70 624.87 Td (- Et maintenant, retestons...) Tj ET Q
q 0.000 g BT 73.70 610.70 Td ( ) Tj ET Q
q 0.000 g BT 73.70 596.53 Td (Le test passe toujours.) Tj ET Q
q 0.000 g BT 73.70 582.35 Td ( ) Tj ET Q
q 0.000 g BT 73.70 568.18 Td (- Nous avons rajouté une contrainte au code. Nous devons maintenant rajouter un test qui va) Tj ET Q
q 0.000 g BT 73.70 554.01 Td (contrôler cette contrainte, lui précise-je. Quel test pourrais-tu ajouter ?) Tj ET Q
q 0.000 g BT 73.70 539.83 Td ( ) Tj ET Q
q 0.000 g BT 73.70 525.66 Td (- Eh bien... un test où je passe autre chose qu'un integer ! en argument...) Tj ET Q
q 0.000 g BT 73.70 511.49 Td ( ) Tj ET Q
q 0.000 g BT 73.70 497.32 Td (- Vas-y !) Tj ET Q
q 0.000 g BT 73.70 483.14 Td ( ) Tj ET Q
q 0.000 g BT 73.70 468.97 Td (Fabrice ajoute un test :) Tj ET Q
q 0.000 g BT 73.70 454.80 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 441.22 Td ( test-ajoute-2: does [assert-equal ajoute 1.1 2.1]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 426.45 Td ( ) Tj ET Q
q 0.000 g BT 73.70 412.28 Td (Et relance RUn...) Tj ET Q
q 0.000 g BT 73.70 398.10 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 384.53 Td ( ==================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 370.36 Td ( = \(R\)EBOL-\(Un\)it =) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 356.18 Td ( = Test Framework =) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 342.01 Td ( ==================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 327.84 Td ( == OUTPUT ===============================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 313.66 Td ( > spike-ajoute.test) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 299.49 Td ( >> SETUP) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 285.32 Td ( Script: "Untitled" \(none\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 271.14 Td (     --> Done) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 256.97 Td ( >> test-ajoute-1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 242.80 Td (     --> Passed in ) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 228.62 Td ( >> test-ajoute-2) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 214.45 Td (     !-> ERROR generated:) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 200.28 Td (         Script Error: ajoute expected nombre argument of type: integer) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 186.10 Td (         Near : assert-equal ajoute 1.1 2.1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 171.93 Td (         Where: test-ajoute-2) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 157.76 Td ( == TEST REPORT ==========================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 143.58 Td ( TOTAL : 2) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 129.41 Td (    => Passed   : 1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 115.24 Td (    => Failures : 0) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 101.06 Td (    => Errors   : 1) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 73.70 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 503.51 45.79 Td (Page 8/11) Tj ET Q

endstream
endobj
19 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [73.70 52.19 199.97 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 20 0 R>>
endobj
20 0 obj
<</Length 4420>>
stream
2 J
0.85 w
BT /F2 8.00 Tf ET
0.85 w
56.69 805.04 m 538.59 805.04 l S
BT /F1 10.00 Tf ET
q 0.502 g BT 73.70 819.05 Td (Programmation Pragmatique : REBOL et eXtreme Programming - Extrait) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 795.55 Td ( =========================================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 781.38 Td ( End of test) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 767.21 Td ( Press [ENTER] to Quit) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 752.43 Td ( ) Tj ET Q
q 0.000 g BT 73.70 738.26 Td (- L'erreur attendue est déclenchée ! C'est ce qu'il fallait faire, non ? s'inquiète Fabrice.) Tj ET Q
q 0.000 g BT 73.70 724.09 Td ( ) Tj ET Q
q 0.000 g BT 73.70 709.91 Td (- Tout à fait ! L'erreur attendue est là. Mais tu conviendras avec moi que RUn n'est pas parlant dans) Tj ET Q
q 0.000 g BT 73.70 695.74 Td (ce cas-ci... RUn dispose d'autres fonctions intéressantes, entre autres une qui permet d'intercepter) Tj ET Q
q 0.000 g BT 73.70 681.57 Td (l'erreur, et de la considérer comme un résultat attendu : 'assert-error. Modifions donc notre test de la) Tj ET Q
q 0.000 g BT 73.70 667.39 Td (manière suivante.) Tj ET Q
q 0.000 g BT 73.70 653.22 Td ( ) Tj ET Q
q 0.000 g BT 73.70 639.05 Td (Reprenant le clavier, je modifie le test 2.) Tj ET Q
q 0.000 g BT 73.70 624.87 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 611.30 Td ( test-ajoute-2: does [assert-error [ajoute 1.1]]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 596.53 Td ( ) Tj ET Q
q 0.000 g BT 73.70 582.35 Td (- Remarque qu'il est ici nécessaire de placer le code à évaluer à l'intérieur d'un bloc. Cela sert à RUn) Tj ET Q
q 0.000 g BT 73.70 568.18 Td (afin d'intercepter et d'évaluer l'erreur.) Tj ET Q
q 0.000 g BT 73.70 554.01 Td ( ) Tj ET Q
q 0.000 g BT 73.70 539.83 Td (Je lance le test...) Tj ET Q
q 0.000 g BT 73.70 525.66 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 512.09 Td ( >> run-test spike-ajoute.test) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 497.32 Td ( ) Tj ET Q
q 0.000 g BT 73.70 483.14 Td (Et nous obtenons :) Tj ET Q
q 0.000 g BT 73.70 468.97 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 455.40 Td ( ==================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 441.22 Td ( = \(R\)EBOL-\(Un\)it =) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 427.05 Td ( = Test Framework =) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 412.88 Td ( ==================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 398.70 Td ( == OUTPUT ===============================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 384.53 Td ( > spike-ajoute.test) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 370.36 Td ( >> SETUP) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 356.18 Td ( Script: "Untitled" \(none\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 342.01 Td (     --> Done) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 327.84 Td ( >> test-ajoute-1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 313.66 Td (     --> Passed in ) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 299.49 Td ( >> test-ajoute-2            ) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 285.32 Td (     --> Passed in ) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 271.14 Td ( == TEST REPORT ==========================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 256.97 Td ( TOTAL : 2) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 242.80 Td (    => Passed   : 2) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 228.62 Td (    => Failures : 0) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 214.45 Td (    => Errors   : 0) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 200.28 Td ( =========================================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 186.10 Td ( End of test) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 171.93 Td ( Press [ENTER] to Quit) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 157.16 Td ( ) Tj ET Q
q 0.000 g BT 73.70 142.98 Td (- Et voilà, dis-je. L'erreur attendue est considérée comme le comportement normal de la fonction, et) Tj ET Q
q 0.000 g BT 73.70 128.81 Td (en résulte un test qui passe ...) Tj ET Q
q 0.000 g BT 73.70 114.64 Td ( ) Tj ET Q
q 0.000 g BT 73.70 100.46 Td (- C'est chouette, di Fabrice. Et il ajoute avec un petit sourire : mais là tu ne contrôle pas le contenu) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 73.70 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 503.51 45.79 Td (Page 9/11) Tj ET Q

endstream
endobj
21 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [73.70 52.19 199.97 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 22 0 R>>
endobj
22 0 obj
<</Length 4649>>
stream
2 J
0.85 w
BT /F1 10.00 Tf ET
0.85 w
56.69 805.04 m 538.59 805.04 l S
q 0.502 g BT 73.70 819.05 Td (Programmation Pragmatique : REBOL et eXtreme Programming - Extrait) Tj ET Q
q 0.000 g BT 73.70 794.95 Td (de l'erreur ! Elle pourrait être déclenchée par n'importe quoi, comme par exemple une division par 0) Tj ET Q
q 0.000 g BT 73.70 780.78 Td (...) Tj ET Q
q 0.000 g BT 73.70 766.61 Td ( ) Tj ET Q
q 0.000 g BT 73.70 752.43 Td (- Finement observé ! Mais le concepteur de RUn y a pensé : tu peux préciser en raffinement \(les ) Tj ET Q
BT /F6 10.00 Tf ET
q 0.000 g BT 73.70 738.26 Td (refinements) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 125.94 738.26 Td ( sont des spécialisation de fonction en REBOL\) à la fonction 'assert-error, le type d'erreur) Tj ET Q
q 0.000 g BT 73.70 724.09 Td (et l'identifiant de celle-ci. Or nous savons que dans ce cas-ci, il s'agit d'une erreur... je regarde dans) Tj ET Q
q 0.000 g BT 73.70 709.91 Td (la documentation de REBOL... une erreur de type 'script et de id 'expect-arg ! Modifions notre) Tj ET Q
q 0.000 g BT 73.70 695.74 Td (deuxième test...) Tj ET Q
q 0.000 g BT 73.70 681.57 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 667.99 Td ( test-ajoute-2: does [assert-error/type-id [ajoute 1.1] [script expect-arg]]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 653.22 Td ( ) Tj ET Q
q 0.000 g BT 73.70 639.05 Td (- Je m'explique. Je rajoute un raffinement à la fonction : /type-id. Et je passe à la fonction un bloc) Tj ET Q
q 0.000 g BT 73.70 624.87 Td (contenant, dans l'ordre le type et l'identifiant \(id\) de l'erreur. Voyons le résultat en lançant le test :) Tj ET Q
q 0.000 g BT 73.70 610.70 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 597.13 Td ( ==================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 582.95 Td ( = \(R\)EBOL-\(Un\)it =) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 568.78 Td ( = Test Framework =) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 554.61 Td ( ==================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 540.43 Td ( == OUTPUT ===============================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 526.26 Td ( > spike-ajoute.test) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 512.09 Td ( >> SETUP) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 497.92 Td ( Script: "Untitled" \(none\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 483.74 Td (     --> Done) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 469.57 Td ( >> test-ajoute-1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 455.40 Td (     --> Passed in ) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 441.22 Td ( >> test-ajoute-2) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 427.05 Td (     --> Passed in ) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 412.88 Td ( true) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 398.70 Td ( == TEST REPORT ==========================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 384.53 Td ( TOTAL : 2) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 370.36 Td (    => Passed   : 2) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 356.18 Td (    => Failures : 0) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 342.01 Td (    => Errors   : 0) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 327.84 Td ( =========================================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 313.66 Td ( End of test) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 299.49 Td ( Press [ENTER] to Quit) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 284.72 Td ( ) Tj ET Q
q 0.000 g BT 73.70 270.54 Td (- Le test passe ! Et au contraire, préciser un type ou un identifiant d'erreur différent fait échouer ton) Tj ET Q
q 0.000 g BT 73.70 256.37 Td (test. Modifions notre test :) Tj ET Q
q 0.000 g BT 73.70 242.20 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 228.62 Td ( test-ajoute-2: does [assert-error/type-id [ajoute 1.1] [script missing]]) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 213.85 Td ( ) Tj ET Q
q 0.000 g BT 73.70 199.68 Td (Et le test échoue :) Tj ET Q
q 0.000 g BT 73.70 185.50 Td ( ) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 171.93 Td ( ==================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 157.76 Td ( = \(R\)EBOL-\(Un\)it =) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 143.58 Td ( = Test Framework =) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 129.41 Td ( ==================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 115.24 Td ( == OUTPUT ===============================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 101.06 Td ( > spike-ajoute.test) Tj ET Q
0.85 w
56.69 56.69 m 538.59 56.69 l S
BT /F6 8.00 Tf ET
q 0.000 g BT 73.70 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 501.28 45.79 Td (Page 10/11) Tj ET Q

endstream
endobj
23 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/Annots [<</Type /Annot /Subtype /Link /Rect [73.70 52.19 199.97 44.19] /Border [0 0 0] /A <</S /URI /URI (http://rebdocproj.org)>>>>]
/Contents 24 0 R>>
endobj
24 0 obj
<</Length 2655>>
stream
2 J
0.85 w
BT /F2 8.00 Tf ET
0.85 w
56.69 805.04 m 538.59 805.04 l S
BT /F1 10.00 Tf ET
q 0.502 g BT 73.70 819.05 Td (Programmation Pragmatique : REBOL et eXtreme Programming - Extrait) Tj ET Q
BT /F2 8.00 Tf ET
q 1.000 0.000 0.000 rg BT 73.70 795.55 Td ( >> SETUP) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 781.38 Td ( Script: "Untitled" \(none\)) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 767.21 Td (     --> Done) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 753.03 Td ( >> test-ajoute-1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 738.86 Td (     --> Passed in ) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 724.69 Td ( >> test-ajoute-2) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 710.51 Td (     *-> Assertion Failed) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 696.34 Td ( false) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 682.17 Td ( == TEST REPORT ==========================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 667.99 Td ( TOTAL : 2) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 653.82 Td (    => Passed   : 1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 639.65 Td (    => Failures : 1) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 625.47 Td (    => Errors   : 0) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 611.30 Td ( =========================================================) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 597.13 Td ( End of test) Tj ET Q
q 1.000 0.000 0.000 rg BT 73.70 582.95 Td ( Press [ENTER] to Quit) Tj ET Q
BT /F1 10.00 Tf ET
q 0.000 g BT 73.70 568.18 Td ( ) Tj ET Q
q 0.000 g BT 73.70 554.01 Td (- Ouf, merci professeur, soupire Fabrice. Je comprends à présent beaucoup mieux l'utilité des tests...) Tj ET Q
q 0.000 g BT 73.70 539.83 Td ( ) Tj ET Q
q 0.000 g BT 73.70 525.66 Td (Je souris.) Tj ET Q
q 0.000 g BT 73.70 511.49 Td ( ) Tj ET Q
q 0.000 g BT 73.70 497.32 Td (- Et tu n'as eu qu'un aperçu d'une partie de leur puissance ! J'aurai encore l'occasion de te parler de) Tj ET Q
q 0.000 g BT 73.70 483.14 Td (tests de non régression, suite de tests ou déboguage... Mais il est déjà tard. Les autres sont déjà) Tj ET Q
q 0.000 g BT 73.70 468.97 Td (partis, et une des pratiques de XP est le "rythme soutenable" ! Donc... à demain.) Tj ET Q
q 0.000 g BT 73.70 454.80 Td ( ) Tj ET Q
q 0.000 g BT 73.70 440.62 Td (- Oui, à demain !) Tj ET Q
q 0.000 g BT 73.70 426.45 Td ( ) Tj ET Q
q 0.000 g BT 73.70 412.28 Td (Ce fut une journée enrichissante. J'aime expliquer XP à ceux qui disposent d'un esprit ouvert pour le) Tj ET Q
q 0.000 g BT 73.70 398.10 Td (comprendre.) Tj ET Q
BT /F6 8.00 Tf ET
0.85 w
56.69 56.69 m 538.59 56.69 l S
q 0.000 g BT 73.70 45.79 Td (The REBOL Documentation Project) Tj ET Q
q 0.000 g BT 501.28 45.79 Td (Page 11/11) Tj ET Q

endstream
endobj
1 0 obj
<</Type /Pages
/Kids [3 0 R 5 0 R 7 0 R 9 0 R 11 0 R 13 0 R 15 0 R 17 0 R 19 0 R 21 0 R 23 0 R ]
/Count 11
/MediaBox [0 0 595.28 841.89]
>>
endobj
25 0 obj
<</Type /Font
/BaseFont /Helvetica
/Subtype /Type1
/Encoding /WinAnsiEncoding
>>
endobj
26 0 obj
<</Type /Font
/BaseFont /Courier
/Subtype /Type1
/Encoding /WinAnsiEncoding
>>
endobj
27 0 obj
<</Type /Font
/BaseFont /Times-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
>>
endobj
28 0 obj
<</Type /Font
/BaseFont /Times-Roman
/Subtype /Type1
/Encoding /WinAnsiEncoding
>>
endobj
29 0 obj
<</Type /Font
/BaseFont /Helvetica-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
>>
endobj
30 0 obj
<</Type /Font
/BaseFont /Helvetica-Oblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
>>
endobj
2 0 obj
<<
/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]
/Font <<
/F1 25 0 R
/F2 26 0 R
/F3 27 0 R
/F4 28 0 R
/F5 29 0 R
/F6 30 0 R
>>
/XObject <<
>>
>>
endobj
31 0 obj
<<
/Producer (FPDF 1.53)
/Title (Programmation Pragmatique : REBOL et eXtreme Programming - Extrait)
/Subject (Divers)
/Author (REBOLtof)
/Keywords (DOCUMENTATION, xp)
/Creator (The REBOL Documentation Project)
/CreationDate (D:20060430094628)
>>
endobj
32 0 obj
<<
/Type /Catalog
/Pages 1 0 R
/OpenAction [3 0 R /FitH null]
/PageLayout /OneColumn
>>
endobj
xref
0 33
0000000000 65535 f 
0000048115 00000 n 
0000048866 00000 n 
0000000009 00000 n 
0000000222 00000 n 
0000002312 00000 n 
0000002525 00000 n 
0000008011 00000 n 
0000008224 00000 n 
0000013135 00000 n 
0000013349 00000 n 
0000017566 00000 n 
0000017781 00000 n 
0000022337 00000 n 
0000022552 00000 n 
0000026881 00000 n 
0000027096 00000 n 
0000031328 00000 n 
0000031543 00000 n 
0000035593 00000 n 
0000035808 00000 n 
0000040279 00000 n 
0000040494 00000 n 
0000045194 00000 n 
0000045409 00000 n 
0000048270 00000 n 
0000048367 00000 n 
0000048462 00000 n 
0000048560 00000 n 
0000048659 00000 n 
0000048761 00000 n 
0000049026 00000 n 
0000049289 00000 n 
trailer
<<
/Size 33
/Root 32 0 R
/Info 31 0 R
>>
startxref
49393
%%EOF
